import{_ as a,c as e,a2 as i,o as t}from"./chunks/framework.BLTIpkzl.js";const k=JSON.parse('{"title":"Config","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guides/fundamentals/config.md","filePath":"docs/guides/fundamentals/config.md"}'),n={name:"docs/guides/fundamentals/config.md"};function o(r,s,d,p,l,h){return t(),e("div",null,s[0]||(s[0]=[i(`<h1 id="config" tabindex="-1">Config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;Config&quot;">​</a></h1><p>A configuração de tempo de execução do seu aplicativo AdonisJS é armazenada dentro do diretório <code>config</code>. O núcleo do framework e muitos dos pacotes instalados dependem desses arquivos de configuração. Portanto, certifique-se de analisar os arquivos de configuração e ajustar quaisquer configurações (se necessário).</p><p>Também recomendamos armazenar todas as configurações personalizadas necessárias para seu aplicativo dentro deste diretório em vez de armazená-las em vários lugares.</p><h2 id="importar-arquivos-de-configuracao" tabindex="-1">Importar arquivos de configuração <a class="header-anchor" href="#importar-arquivos-de-configuracao" aria-label="Permalink to &quot;Importar arquivos de configuração&quot;">​</a></h2><p>Você pode importar os arquivos de configuração dentro da base de código do seu aplicativo usando a instrução <code>import</code>. Por exemplo:</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { appKey } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Config/app&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="usando-o-provedor-de-configuracao" tabindex="-1">Usando o provedor de configuração <a class="header-anchor" href="#usando-o-provedor-de-configuracao" aria-label="Permalink to &quot;Usando o provedor de configuração&quot;">​</a></h2><p>Em vez de importar diretamente os arquivos de configuração, você também pode usar o provedor <code>Config</code> da seguinte forma:</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@ioc:Adonis/Core/Config&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;app.appKey&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>O método <code>Config.get</code> aceita um caminho separado por pontos para a chave de configuração. No exemplo acima, lemos a propriedade <code>appKey</code> do arquivo <code>config/app.ts</code>.</p><p>Além disso, você pode definir um valor de fallback. O valor de fallback é retornado quando o valor de configuração real está ausente.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;database.connections.mysql.host&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Não há benefícios diretos em usar o provedor Config em vez de importar manualmente os arquivos de configuração. No entanto, o provedor Config é a única opção nos seguintes cenários.</p><ul><li><strong>Pacotes externos</strong>: Pacotes externos nunca devem depender do caminho do arquivo para ler/importar a configuração. Em vez disso, ele deve usar o provedor <code>Config</code>. Usar o provedor Config cria um acoplamento flexível entre o aplicativo e o pacote. <a href="./../../reference/views/globals/all-helpers.html#config">config</a> método global para referenciar os valores de configuração.</li></ul><h2 id="alterando-o-local-da-configuracao" tabindex="-1">Alterando o local da configuração <a class="header-anchor" href="#alterando-o-local-da-configuracao" aria-label="Permalink to &quot;Alterando o local da configuração&quot;">​</a></h2><p>Você pode atualizar o local do diretório config modificando o arquivo <code>.adonisrc.json</code>.</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;directories&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;config&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./configurations&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>O provedor de configuração lerá automaticamente o arquivo do diretório recém-configurado, e todos os pacotes subjacentes que dependem dos arquivos de configuração funcionarão bem.</p><h2 id="advertencias" tabindex="-1">Advertências <a class="header-anchor" href="#advertencias" aria-label="Permalink to &quot;Advertências&quot;">​</a></h2><p>Todos os arquivos de configuração dentro do diretório <code>config</code> são importados automaticamente pelo framework durante a fase de inicialização. Como resultado disso, seus arquivos de configuração não devem depender das ligações do contêiner.</p><p>Por exemplo, o código a seguir será interrompido ao tentar importar o provedor <code>Route</code> antes mesmo de ser registrado no contêiner.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ❌ Não funciona</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Route </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@ioc:Adonis/Core/Route&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> someConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  assetsUrl: Route.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">makeUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/assets&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Você pode considerar essa limitação ruim. No entanto, ela tem um impacto positivo no design do aplicativo.</p><p>Fundamentalmente, seu código de tempo de execução deve depender da configuração e NÃO o contrário. Por exemplo:</p><div class="danger custom-block"><p class="custom-block-title">ERROR</p><p>Não derive a configuração do código de tempo de execução (Modelo neste caso)</p></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> User </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;App/Models/User&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> someConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  databaseTable: User.table</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">SUCESSO</p><p>Em vez disso, faça seu modelo ler a tabela do arquivo de configuração</p></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> someConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  databaseTable: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;users&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> someConfig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Config/file/path&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> someConfig.databaseTable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="referencia-de-configuracao" tabindex="-1">Referência de configuração <a class="header-anchor" href="#referencia-de-configuracao" aria-label="Permalink to &quot;Referência de configuração&quot;">​</a></h2><p>Conforme você instala e configura pacotes AdonisJS, eles podem criar novos arquivos de configuração. A seguir está uma lista de arquivos de configuração (com seus modelos padrão) usados ​​pelas diferentes partes do framework.</p><table tabindex="0"><thead><tr><th>Arquivo de configuração</th><th>Stub</th><th>Usado por</th></tr></thead><tbody><tr><td><code>app.ts</code></td><td><a href="https://git.io/JfefZ" target="_blank" rel="noreferrer">https://git.io/JfefZ</a></td><td>Usado pelo núcleo do framework, incluindo o servidor HTTP, logger, validador e o gerenciador de ativos.</td></tr><tr><td><code>bodyparser.ts</code></td><td><a href="https://git.io/Jfefn" target="_blank" rel="noreferrer">https://git.io/Jfefn</a></td><td>Usado pelo middleware bodyparser</td></tr><tr><td><code>cors.ts</code></td><td><a href="https://git.io/JfefC" target="_blank" rel="noreferrer">https://git.io/JfefC</a></td><td>Usado pelo hook do servidor CORS</td></tr><tr><td><code>hash.ts</code></td><td><a href="https://git.io/JfefW" target="_blank" rel="noreferrer">https://git.io/JfefW</a></td><td>Usado pelo pacote hash</td></tr><tr><td><code>session.ts</code></td><td><a href="https://git.io/JeYHp" target="_blank" rel="noreferrer">https://git.io/JeYHp</a></td><td>Usado pelo pacote session</td></tr><tr><td><code>shield.ts</code></td><td><a href="https://git.io/Jvwvt" target="_blank" rel="noreferrer">https://git.io/Jvwvt</a></td><td>Usado pelo shield package</td></tr><tr><td><code>static.ts</code></td><td><a href="https://git.io/Jfefl" target="_blank" rel="noreferrer">https://git.io/Jfefl</a></td><td>Usado pelo servidor de arquivo estático</td></tr><tr><td><code>auth.ts</code></td><td><a href="https://git.io/JY0mp" target="_blank" rel="noreferrer">https://git.io/JY0mp</a></td><td>Usado pelo pacote auth</td></tr><tr><td><code>database.ts</code></td><td><a href="https://git.io/JesV9" target="_blank" rel="noreferrer">https://git.io/JesV9</a></td><td>Usado pelo Lucid ORM</td></tr><tr><td><code>mail.ts</code></td><td><a href="https://git.io/JvgAf" target="_blank" rel="noreferrer">https://git.io/JvgAf</a></td><td>Usado pelo pacote AdonisJS mail</td></tr><tr><td><code>redis.ts</code></td><td><a href="https://git.io/JemcF" target="_blank" rel="noreferrer">https://git.io/JemcF</a></td><td>Usado pelo pacote Redis</td></tr><tr><td><code>drive.ts</code></td><td><a href="https://git.io/JBt3o" target="_blank" rel="noreferrer">https://git.io/JBt3o</a></td><td>Usado pelo provedor Drive</td></tr><tr><td><code>ally.ts</code></td><td><a href="https://git.io/JOdi5" target="_blank" rel="noreferrer">https://git.io/JOdi5</a></td><td>Usado pelo pacote Social authentication (Ally)</td></tr></tbody></table>`,32)]))}const g=a(n,[["render",o]]);export{k as __pageData,g as default};
