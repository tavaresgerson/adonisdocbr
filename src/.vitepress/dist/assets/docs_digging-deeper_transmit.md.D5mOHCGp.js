import{_ as a,c as i,a2 as n,o as e}from"./chunks/framework.Dz7_3PEu.js";const c=JSON.parse('{"title":"Transmit","description":"","frontmatter":{"summary":"Aprenda a enviar atualizações em tempo real com SSE do seu servidor AdonisJS usando o pacote Transmit"},"headers":[],"relativePath":"docs/digging-deeper/transmit.md","filePath":"docs/digging-deeper/transmit.md"}'),t={name:"docs/digging-deeper/transmit.md"};function r(l,s,p,o,h,d){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="transmit" tabindex="-1">Transmit <a class="header-anchor" href="#transmit" aria-label="Permalink to &quot;Transmit&quot;">​</a></h1><p>Transmit é um módulo nativo Server-Sent-Event (SSE) opinativo criado para AdonisJS. É uma maneira simples e eficiente de enviar atualizações em tempo real para o cliente, como notificações, mensagens de chat ao vivo ou qualquer outro tipo de dados em tempo real.</p><div class="info custom-block"><p class="custom-block-title">NOTA</p><p>A transmissão de dados ocorre apenas do servidor para o cliente, não o contrário. Você precisa usar um formulário ou uma solicitação de busca para obter a comunicação do cliente para o servidor.</p></div><h2 id="instalacao" tabindex="-1">Instalação <a class="header-anchor" href="#instalacao" aria-label="Permalink to &quot;Instalação&quot;">​</a></h2><p>Instale e configure o pacote usando o seguinte comando :</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @adonisjs/transmit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><details class="details custom-block"><summary>Veja as etapas executadas pelo comando add</summary><ol><li><p>Instala o pacote <code>@adonisjs/transmit</code> usando o gerenciador de pacotes detectado.</p></li><li><p>Registra o provedor de serviços <code>@adonisjs/transmit/transmit_provider</code> dentro do arquivo <code>adonisrc.ts</code>.</p></li><li><p>Cria um novo arquivo <code>transmit.ts</code> dentro do diretório <code>config</code>.</p></li></ol></details><p>Você também terá que instalar o pacote do cliente Transmit para escutar eventos no lado do cliente.</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @adonisjs/transmit-client</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="configuracao" tabindex="-1">Configuração <a class="header-anchor" href="#configuracao" aria-label="Permalink to &quot;Configuração&quot;">​</a></h2><p>A configuração do pacote de transmissão é armazenada no arquivo <code>config/transmit.ts</code>.</p><p>Veja também: <a href="https://github.com/adonisjs/transmit/blob/main/stubs/config/transmit.stub" target="_blank" rel="noreferrer">Config stub</a></p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@adonisjs/transmit&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pingInterval: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  transport: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="pinginterval" tabindex="-1"><code>pingInterval</code> <a class="header-anchor" href="#pinginterval" aria-label="Permalink to &quot;\`pingInterval\`&quot;">​</a></h3><p>O intervalo usado para enviar mensagens de ping para o cliente. O valor está em milissegundos ou usando um formato de string <code>Duration</code> (por exemplo: <code>10s</code>). Defina como <code>false</code> para desabilitar mensagens de ping.</p><h3 id="transport" tabindex="-1"><code>transport</code> <a class="header-anchor" href="#transport" aria-label="Permalink to &quot;\`transport\`&quot;">​</a></h3><p>O Transmit suporta sincronização de eventos em vários servidores ou instâncias. Você pode habilitar o recurso referenciando a camada de transporte desejada (somente <code>redis</code> é suportado por enquanto). Defina como <code>null</code> para desabilitar a sincronização.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> env </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;#start/env&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@adonisjs/transmit&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { redis } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@adonisjs/transmit/transports&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  transport: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    driver: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      host: env.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;REDIS_HOST&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      port: env.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;REDIS_PORT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      password: env.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;REDIS_PASSWORD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      keyPrefix: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;transmit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="info custom-block"><p class="custom-block-title">NOTA</p><p>Certifique-se de ter <code>ioredis</code> instalado ao usar o transporte <code>redis</code>.</p></div><h2 id="registrar-rotas" tabindex="-1">Registrar rotas <a class="header-anchor" href="#registrar-rotas" aria-label="Permalink to &quot;Registrar rotas&quot;">​</a></h2><p>Você precisa registrar as rotas de transmissão para permitir que o cliente se conecte ao servidor. As rotas são registradas manualmente.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// start/routes.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> transmit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@adonisjs/transmit/services/main&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transmit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerRoutes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Você também pode registrar cada rota manualmente vinculando o controlador manualmente.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// start/routes.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EventStreamController</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@adonisjs/transmit/controllers/event_stream_controller&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SubscribeController</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@adonisjs/transmit/controllers/subscribe_controller&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UnsubscribeController</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@adonisjs/transmit/controllers/unsubscribe_controller&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/__transmit/events&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [EventStreamController])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/__transmit/subscribe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [SubscribeController])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/__transmit/unsubscribe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [UnsubscribeController])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Se você quiser modificar a definição da rota, por exemplo, para usar o <a href="./../security/rate_limiting.html"><code>Rate Limiter</code></a> e o middleware auth para evitar abuso de algumas rotas de transmissão, você pode alterar a definição da rota ou passar um retorno de chamada para o método <code>transmit.registerRoutes</code>.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// start/routes.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> transmit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@adonisjs/transmit/services/main&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transmit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerRoutes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Certifique-se de que você está autenticado para registrar seu cliente</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (route.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;__transmit/events&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    route.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">middleware</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(middleware.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Adicione um middleware de aceleração a outras rotas de transmissão</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  route.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(throttle)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="canais" tabindex="-1">Canais <a class="header-anchor" href="#canais" aria-label="Permalink to &quot;Canais&quot;">​</a></h2><p>Os canais são usados ​​para agrupar eventos. Por exemplo, você pode ter um canal para notificações, outro para mensagens de bate-papo e assim por diante. Eles são criados na hora quando o cliente os assina.</p><h3 id="nomes-de-canais" tabindex="-1">Nomes de canais <a class="header-anchor" href="#nomes-de-canais" aria-label="Permalink to &quot;Nomes de canais&quot;">​</a></h3><p>Os nomes de canais são usados ​​para identificar o canal. Eles diferenciam maiúsculas de minúsculas e devem ser uma string. Você não pode usar caracteres especiais ou espaços no nome do canal, exceto <code>/</code>. A seguir estão alguns exemplos de nomes de canais válidos:</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> transmit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@adonisjs/transmit/services/main&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transmit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">broadcast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;global&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transmit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">broadcast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;chats/1/messages&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transmit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">broadcast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;users/1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">DICA</p><p>Os nomes de canais usam a mesma sintaxe que route no AdonisJS, mas não estão relacionados a eles. Você pode definir livremente uma rota http e um canal com a mesma chave.</p></div><h3 id="autorizacao-de-canal" tabindex="-1">Autorização de canal <a class="header-anchor" href="#autorizacao-de-canal" aria-label="Permalink to &quot;Autorização de canal&quot;">​</a></h3><p>Você pode autorizar ou rejeitar uma conexão a um canal usando o método <code>authorize</code>. O método recebe o nome do canal e o <code>HttpContext</code>. Ele deve retornar um valor booleano.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// start/transmit.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> transmit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@adonisjs/transmit/services/main&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;#models/chat&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { HttpContext } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@adonisjs/core/http&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transmit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authorize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;{ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }&gt;(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;users/:id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ctx.auth.user?.id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transmit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authorize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;{ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }&gt;(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;chats/:id/messages&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> chat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chat.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findOrFail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ctx.bouncer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">allows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;accessChat&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, chat)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="transmitindo-eventos" tabindex="-1">Transmitindo eventos <a class="header-anchor" href="#transmitindo-eventos" aria-label="Permalink to &quot;Transmitindo eventos&quot;">​</a></h2><p>Você pode transmitir eventos para um canal usando o método <code>broadcast</code>. O método recebe o nome do canal e os dados para enviar.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> transmit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@adonisjs/transmit/services/main&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transmit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">broadcast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;global&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Você também pode transmitir eventos para qualquer canal, exceto um, usando o método <code>broadcastExcept</code>. O método recebe o nome do canal, os dados para enviar e o UID que você deseja ignorar.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transmit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">broadcastExcept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;global&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;uid-of-sender&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="sincronizando-entre-varios-servidores-ou-instancias" tabindex="-1">Sincronizando entre vários servidores ou instâncias <a class="header-anchor" href="#sincronizando-entre-varios-servidores-ou-instancias" aria-label="Permalink to &quot;Sincronizando entre vários servidores ou instâncias&quot;">​</a></h3><p>Por padrão, a transmissão de eventos funciona apenas no contexto de uma solicitação HTTP. No entanto, você pode transmitir eventos em segundo plano usando o serviço <code>transmit</code> se registrar um <code>transport</code> na sua configuração.</p><p>A camada de transporte é responsável por sincronizar eventos entre vários servidores ou instâncias. Ele funciona transmitindo quaisquer eventos (como eventos transmitidos, assinaturas e cancelamentos de assinaturas) para todos os servidores ou instâncias conectados usando um <code>Message Bus</code>.</p><p>O servidor ou instância responsável pela conexão do seu cliente receberá o evento e o transmitirá ao cliente.</p><h2 id="transmit-client" tabindex="-1">Transmit Client <a class="header-anchor" href="#transmit-client" aria-label="Permalink to &quot;Transmit Client&quot;">​</a></h2><p>Você pode ouvir eventos no lado do cliente usando o pacote <code>@adonisjs/transmit-client</code>. O pacote fornece uma classe <code>Transmit</code>. O cliente usa a API <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventSource" target="_blank" rel="noreferrer"><code>EventSource</code></a> por padrão para se conectar ao servidor.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Transmit } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@adonisjs/transmit-client&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> transmit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Transmit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  baseUrl: window.location.origin</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">DICA</p><p>Você deve criar apenas uma instância da classe <code>Transmit</code> e reutilizá-la em todo o seu aplicativo.</p></div><h3 id="configurando-a-instancia-transmit" tabindex="-1">Configurando a Instância Transmit <a class="header-anchor" href="#configurando-a-instancia-transmit" aria-label="Permalink to &quot;Configurando a Instância Transmit&quot;">​</a></h3><p>A classe <code>Transmit</code> aceita um objeto com as seguintes propriedades:</p><h3 id="baseurl" tabindex="-1"><code>baseUrl</code> <a class="header-anchor" href="#baseurl" aria-label="Permalink to &quot;\`baseUrl\`&quot;">​</a></h3><p>A URL base do servidor. A URL deve incluir o protocolo (http ou https) e o nome do domínio.</p><h3 id="uidgenerator" tabindex="-1"><code>uidGenerator</code> <a class="header-anchor" href="#uidgenerator" aria-label="Permalink to &quot;\`uidGenerator\`&quot;">​</a></h3><p>Uma função que gera um identificador exclusivo para o cliente. A função deve retornar uma string. O padrão é <code>crypto.randomUUID</code>.</p><h3 id="eventsourcefactory" tabindex="-1"><code>eventSourceFactory</code> <a class="header-anchor" href="#eventsourcefactory" aria-label="Permalink to &quot;\`eventSourceFactory\`&quot;">​</a></h3><p>Uma função que cria uma nova instância <code>EventSource</code>. O padrão é a WebAPI <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventSource" target="_blank" rel="noreferrer"><code>EventSource</code></a>. Você precisa fornecer uma implementação personalizada se quiser usar o cliente em <code>Node.js</code>, <code>React Native</code> ou qualquer outro ambiente que não suporte a API <code>EventSource</code>.</p><h3 id="eventtargetfactory" tabindex="-1"><code>eventTargetFactory</code> <a class="header-anchor" href="#eventtargetfactory" aria-label="Permalink to &quot;\`eventTargetFactory\`&quot;">​</a></h3><p>Uma função que cria uma nova instância <code>EventTarget</code>. O padrão é o WebAPI <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget" target="_blank" rel="noreferrer"><code>EventTarget</code></a>. Você precisa fornecer uma implementação personalizada se quiser usar o cliente em <code>Node.js</code>, <code>React Native</code> ou qualquer outro ambiente que não suporte a API <code>EventTarget</code>. Retorne <code>null</code> para desabilitar a API <code>EventTarget</code>.</p><h3 id="httpclientfactory" tabindex="-1"><code>httpClientFactory</code> <a class="header-anchor" href="#httpclientfactory" aria-label="Permalink to &quot;\`httpClientFactory\`&quot;">​</a></h3><p>Uma função que cria uma nova instância <code>HttpClient</code>. É usada principalmente para fins de teste.</p><h3 id="beforesubscribe" tabindex="-1"><code>beforeSubscribe</code> <a class="header-anchor" href="#beforesubscribe" aria-label="Permalink to &quot;\`beforeSubscribe\`&quot;">​</a></h3><p>Uma função que é chamada antes de assinar um canal. Ela recebe o nome do canal e o objeto <code>Request</code> enviado ao servidor. Use esta função para adicionar cabeçalhos personalizados ou modificar o objeto de solicitação.</p><h3 id="beforeunsubscribe" tabindex="-1"><code>beforeUnsubscribe</code> <a class="header-anchor" href="#beforeunsubscribe" aria-label="Permalink to &quot;\`beforeUnsubscribe\`&quot;">​</a></h3><p>Uma função que é chamada antes de cancelar a assinatura de um canal. Ela recebe o nome do canal e o objeto <code>Request</code> enviado ao servidor. Use esta função para adicionar cabeçalhos personalizados ou modificar o objeto de solicitação.</p><h3 id="maxreconnectattempts" tabindex="-1"><code>maxReconnectAttempts</code> <a class="header-anchor" href="#maxreconnectattempts" aria-label="Permalink to &quot;\`maxReconnectAttempts\`&quot;">​</a></h3><p>O número máximo de tentativas de reconexão. O padrão é <code>5</code>.</p><h3 id="onreconnectattempt" tabindex="-1"><code>onReconnectAttempt</code> <a class="header-anchor" href="#onreconnectattempt" aria-label="Permalink to &quot;\`onReconnectAttempt\`&quot;">​</a></h3><p>Uma função que é chamada antes de cada tentativa de reconexão e recebe o número de tentativas feitas até o momento. Use esta função para adicionar lógica personalizada.</p><h3 id="onreconnectfailed" tabindex="-1"><code>onReconnectFailed</code> <a class="header-anchor" href="#onreconnectfailed" aria-label="Permalink to &quot;\`onReconnectFailed\`&quot;">​</a></h3><p>Uma função que é chamada quando as tentativas de reconexão falham. Use esta função para adicionar lógica personalizada.</p><h3 id="onsubscribefailed" tabindex="-1"><code>onSubscribeFailed</code> <a class="header-anchor" href="#onsubscribefailed" aria-label="Permalink to &quot;\`onSubscribeFailed\`&quot;">​</a></h3><p>Uma função que é chamada quando a assinatura falha. Ela recebe o objeto <code>Response</code>. Use esta função para adicionar lógica personalizada.</p><h3 id="onsubscription" tabindex="-1"><code>onSubscription</code> <a class="header-anchor" href="#onsubscription" aria-label="Permalink to &quot;\`onSubscription\`&quot;">​</a></h3><p>Uma função que é chamada quando a assinatura é bem-sucedida. Ela recebe o nome do canal. Use esta função para adicionar lógica personalizada.</p><h3 id="onunsubscription" tabindex="-1"><code>onUnsubscription</code> <a class="header-anchor" href="#onunsubscription" aria-label="Permalink to &quot;\`onUnsubscription\`&quot;">​</a></h3><p>Uma função que é chamada quando o cancelamento da assinatura é bem-sucedido. Ela recebe o nome do canal. Use esta função para adicionar lógica personalizada.</p><h3 id="criando-uma-assinatura" tabindex="-1">Criando uma assinatura <a class="header-anchor" href="#criando-uma-assinatura" aria-label="Permalink to &quot;Criando uma assinatura&quot;">​</a></h3><p>Você pode criar uma assinatura para um canal usando o método <code>subscription</code>. O método recebe o nome do canal.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> subscription</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> transmit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscription</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;chats/1/messages&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subscription.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>O método <code>create</code> registra a assinatura no servidor. Ele retorna uma promessa de que você pode <code>await</code> ou <code>void</code>.</p><div class="info custom-block"><p class="custom-block-title">NOTA</p><p>Se você não chamar o método <code>create</code>, a assinatura não será registrada no servidor e você não receberá nenhum evento.</p></div><h3 id="ouvindo-eventos" tabindex="-1">Ouvindo eventos <a class="header-anchor" href="#ouvindo-eventos" aria-label="Permalink to &quot;Ouvindo eventos&quot;">​</a></h3><p>Você pode ouvir eventos na assinatura usando o método <code>onMessage</code> que recebe uma função de retorno de chamada. Você pode chamar o método <code>onMessage</code> várias vezes para adicionar diferentes retornos de chamada.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">subscription.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Você também pode ouvir um canal apenas uma vez usando o método <code>onMessageOnce</code> que recebe uma função de retorno de chamada.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">subscription.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onMessageOnce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;I will be called only once&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="parar-de-ouvir-eventos" tabindex="-1">Parar de ouvir eventos <a class="header-anchor" href="#parar-de-ouvir-eventos" aria-label="Permalink to &quot;Parar de ouvir eventos&quot;">​</a></h3><p>Os métodos <code>onMessage</code> e <code>onMessageOnce</code> retornam uma função que você pode chamar para parar de ouvir um retorno de chamada específico.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> stopListening</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subscription.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Pare de ouvir</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stopListening</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="excluindo-uma-assinatura" tabindex="-1">Excluindo uma assinatura <a class="header-anchor" href="#excluindo-uma-assinatura" aria-label="Permalink to &quot;Excluindo uma assinatura&quot;">​</a></h3><p>Você pode excluir uma assinatura usando o método <code>delete</code>. O método retorna uma promessa que você pode <code>await</code> ou <code>void</code>. Este método cancelará o registro da assinatura no servidor.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subscription.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="evitando-a-interferencia-do-gzip" tabindex="-1">Evitando a interferência do GZip <a class="header-anchor" href="#evitando-a-interferencia-do-gzip" aria-label="Permalink to &quot;Evitando a interferência do GZip&quot;">​</a></h2><p>Ao implantar aplicativos que usam <code>@adonisjs/transmit</code>, é importante garantir que a compactação do GZip não interfira no tipo de conteúdo <code>text/event-stream</code> usado por Eventos Enviados pelo Servidor (SSE). A compactação aplicada ao <code>text/event-stream</code> pode causar problemas de conexão, levando a desconexões frequentes ou falhas do SSE.</p><p>Se sua implantação usar um proxy reverso (como Traefik ou Nginx) ou outro middleware que aplique GZip, certifique-se de que a compactação esteja desabilitada para o tipo de conteúdo <code>text/event-stream</code>.</p><h3 id="exemplo-de-configuracao-para-o-traefik" tabindex="-1">Exemplo de configuração para o Traefik <a class="header-anchor" href="#exemplo-de-configuracao-para-o-traefik" aria-label="Permalink to &quot;Exemplo de configuração para o Traefik&quot;">​</a></h3><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>traefik.http.middlewares.gzip.compress=true</span></span>
<span class="line"><span>traefik.http.middlewares.gzip.compress.excludedcontenttypes=text/event-stream</span></span>
<span class="line"><span>traefik.http.routers.my-router.middlewares=gzip</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,97)]))}const u=a(t,[["render",r]]);export{c as __pageData,u as default};
