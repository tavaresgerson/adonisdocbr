import{_ as a,c as s,o as i,a4 as e}from"./chunks/framework.nQaBHiNx.js";const E=JSON.parse('{"title":"Configuração","description":"","frontmatter":{},"headers":[],"relativePath":"docs/03-getting-started/03-configuration.md","filePath":"docs/03-getting-started/03-configuration.md"}'),o={name:"docs/03-getting-started/03-configuration.md"},t=e(`<h1 id="configuracao" tabindex="-1">Configuração <a class="header-anchor" href="#configuracao" aria-label="Permalink to &quot;Configuração&quot;">​</a></h1><p>A primeira etapa para remover o código de massa é encontrar um local dedicado para armazenar a configuração da aplicação. O AdonisJs utiliza o diretório <code>config</code> para isso. Todo novo projeto criado usando o <code>adonis-cli</code> vem com uma série de arquivos de configuração pré-configurados. Além disso, você pode criar seus próprios arquivos de configuração da aplicação dentro do mesmo diretório.</p><h2 id="config-provedor" tabindex="-1">Config provedor <a class="header-anchor" href="#config-provedor" aria-label="Permalink to &quot;Config provedor&quot;">​</a></h2><p>Para manter as coisas simples e secas, o Adonis tem um provedor de configuração integrado que carrega automaticamente todos os arquivos de configuração (terminando com .js) na hora de inicializar o servidor, o que significa que você pode acessar valores de todos os arquivos no diretório &quot;config&quot;.</p><p>Não se esqueça de não exigir manualmente arquivos de configuração dentro do seu aplicativo e em vez disso aproveite o provedor de configuração.</p><p>Não entendi a sua pergunta. Você poderia esclarecer melhor o que deseja saber?</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./config/app.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(app.appKey)</span></span></code></pre></div><p>Direita:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Config&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;app.appKey&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><h2 id="leitura-gravacao-de-valores" tabindex="-1">Leitura/Gravação de Valores <a class="header-anchor" href="#leitura-gravacao-de-valores" aria-label="Permalink to &quot;Leitura/Gravação de Valores&quot;">​</a></h2><p>Ler/escrever valores é uma tarefa bastante simples com a ajuda do provedor <em>Config</em>. Além disso, você pode usar a notação de ponto para obter/definir valores.</p><h4 id="get-chave-valorpadrao" tabindex="-1">get(chave, [valorPadrão]) <a class="header-anchor" href="#get-chave-valorpadrao" aria-label="Permalink to &quot;get(chave, [valorPadrão])&quot;">​</a></h4><p>O método &#39;get&#39; é usado para ler valores. Também ele aceita um parâmetro opcional &#39;defaultValue&#39;, que é retornado quando o valor real for indefinido ou nulo.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Config&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;database.host&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="set-chave-valor" tabindex="-1">set(chave, valor) <a class="header-anchor" href="#set-chave-valor" aria-label="Permalink to &quot;set(chave, valor)&quot;">​</a></h4><p>O método &#39;set&#39; atualizará o valor existente com o novo valor. Também criará a chave/valor se não existir.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Config&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;database.host&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,17),n=[t];function r(l,h,p,d,k,c){return i(),s("div",null,n)}const u=a(o,[["render",r]]);export{E as __pageData,u as default};
