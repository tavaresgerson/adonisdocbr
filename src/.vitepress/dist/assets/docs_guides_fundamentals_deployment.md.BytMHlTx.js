import{_ as a,c as i,a2 as e,o as n}from"./chunks/framework.BLTIpkzl.js";const k=JSON.parse('{"title":"Implantação","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guides/fundamentals/deployment.md","filePath":"docs/guides/fundamentals/deployment.md"}'),r={name:"docs/guides/fundamentals/deployment.md"};function p(o,s,l,t,d,h){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="implantacao" tabindex="-1">Implantação <a class="header-anchor" href="#implantacao" aria-label="Permalink to &quot;Implantação&quot;">​</a></h1><p>A implantação de um aplicativo AdonisJS não é diferente da implantação de qualquer outro aplicativo Node.js. Primeiro, você precisará de um servidor/plataforma que possa instalar e executar a versão mais recente do <code>Node.js v14</code>.</p><div class="info custom-block"><p class="custom-block-title">NOTA</p><p>Para uma experiência de implantação sem atrito, você pode experimentar o Cleavr. É um serviço de provisionamento de servidor e tem suporte de primeira classe para <a href="https://cleavr.io/adonis" target="_blank" rel="noreferrer">implantar aplicativos AdonisJS</a>.</p><p><strong>Aviso: Cleavr também é um patrocinador do AdonisJS.</strong></p></div><h2 id="compilando-typescript-para-javascript" tabindex="-1">Compilando TypeScript para JavaScript <a class="header-anchor" href="#compilando-typescript-para-javascript" aria-label="Permalink to &quot;Compilando TypeScript para JavaScript&quot;">​</a></h2><p>Os aplicativos AdonisJS são escritos em TypeScript e devem ser compilados para JavaScript durante a implantação. Você pode compilar seu aplicativo diretamente no servidor de produção ou executar a etapa de construção em um pipeline de CI/CD.</p><p>Você pode construir seu <a href="./typescript-build-process.html#standalone-production-builds">código para produção</a> executando o seguinte comando Ace. A saída JavaScript compilada é escrita dentro do diretório <code>build</code>.</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --production</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Se você executou a etapa de build dentro de um pipeline de CI/CD, então você pode mover apenas a pasta <code>build</code> para seu servidor de produção e instalar as dependências de produção diretamente no servidor.</p><h2 id="iniciando-o-servidor-de-producao" tabindex="-1">Iniciando o servidor de produção <a class="header-anchor" href="#iniciando-o-servidor-de-producao" aria-label="Permalink to &quot;Iniciando o servidor de produção&quot;">​</a></h2><p>Você pode iniciar o servidor de produção executando o arquivo <code>server.js</code>.</p><p>Se você executou a etapa de build em seu servidor de produção, certifique-se de primeiro <code>cd</code> no diretório <code>build</code> e então inicie o servidor.</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ci</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --production</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Iniciar o servidor</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Se a etapa de build foi executada em um pipeline de CI/CD e <strong>você copiou apenas a pasta <code>build</code> para seu servidor de produção</strong>, o diretório <code>build</code> se torna a raiz do seu aplicativo.</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ci</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --production</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Iniciar o servidor</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="usando-um-gerenciador-de-processos" tabindex="-1">Usando um gerenciador de processos <a class="header-anchor" href="#usando-um-gerenciador-de-processos" aria-label="Permalink to &quot;Usando um gerenciador de processos&quot;">​</a></h3><p>É recomendado usar um gerenciador de processos ao gerenciar um aplicativo Node.js em um servidor básico.</p><p>Um gerenciador de processos garante reiniciar o aplicativo se ele travar durante o tempo de execução. Além disso, alguns gerenciadores de processos como <a href="https://pm2.keymetrics.io/docs/usage/quick-start/" target="_blank" rel="noreferrer">PM2</a> também podem executar reinicializações graciosas ao reimplantar o aplicativo.</p><p>A seguir está um exemplo de <a href="https://pm2.keymetrics.io/docs/usage/application-declaration/" target="_blank" rel="noreferrer">arquivo de ecossistema</a> para PM2.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  apps: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;web-app&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      script: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./build/server.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      instances: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;max&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      exec_mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cluster&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      autorestart: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="proxy-reverso-nginx" tabindex="-1">Proxy reverso NGINX <a class="header-anchor" href="#proxy-reverso-nginx" aria-label="Permalink to &quot;Proxy reverso NGINX&quot;">​</a></h2><p>Ao executar o aplicativo AdonisJS em um servidor básico, você deve colocá-lo atrás do NGINX (ou um servidor web similar) por <a href="https://medium.com/intrinsic/why-should-i-use-a-reverse-proxy-if-node-js-is-production-ready-5a079408b2ca" target="_blank" rel="noreferrer">vários motivos diferentes</a>, com a terminação SSL sendo um dos mais importantes.</p><div class="info custom-block"><p class="custom-block-title">NOTA</p><p>Certifique-se de ler o <a href="./../http/request.html#trusted-proxy">guia de proxies confiáveis</a> para garantir que você possa acessar o endereço IP correto do visitante ao executar o aplicativo AdonisJS atrás de um servidor proxy.</p></div><p>A seguir está um exemplo de configuração NGINX para solicitações de proxy para seu aplicativo AdonisJS. <strong>Certifique-se de substituir os valores dentro dos colchetes angulares <code>&lt;&gt;</code></strong>.</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;APP_DOMAIN.COM&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://localhost:&lt;ADONIS_PORT&gt;;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_http_version </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Upgrade $http_upgrade;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Connection </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;upgrade&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Host $host;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Real-IP $remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Forwarded-Proto $scheme;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_cache_bypass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$http_upgrade;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="migrando-banco-de-dados" tabindex="-1">Migrando banco de dados <a class="header-anchor" href="#migrando-banco-de-dados" aria-label="Permalink to &quot;Migrando banco de dados&quot;">​</a></h2><p>Usando o comando <code>node ace migration:run --force</code>, você pode migrar seu banco de dados de produção. O sinalizador <code>--force</code> é necessário ao executar migrações no ambiente de produção.</p><h3 id="quando-migrar" tabindex="-1">Quando migrar <a class="header-anchor" href="#quando-migrar" aria-label="Permalink to &quot;Quando migrar&quot;">​</a></h3><p>Além disso, seria melhor se você sempre executasse as migrações antes de reiniciar o servidor. Então, se a migração falhar, não reinicie o servidor.</p><p>Usando um serviço gerenciado como Cleavr ou Heroku, eles podem lidar automaticamente com esse caso de uso. Caso contrário, você terá que executar o script de migração dentro de um pipeline de CI/CD ou executá-lo manualmente por meio de SSH.</p><h3 id="nao-faca-rollback-na-producao" tabindex="-1">Não faça rollback na produção <a class="header-anchor" href="#nao-faca-rollback-na-producao" aria-label="Permalink to &quot;Não faça rollback na produção&quot;">​</a></h3><p>O método <code>down</code> em seus arquivos de migração geralmente contém ações destrutivas como <strong>descartar a tabela</strong> ou <strong>remover uma coluna</strong> e assim por diante. É recomendável desativar rollbacks na produção dentro do arquivo <code>config/database.ts</code>.</p><p>Desabilitar rollbacks na produção garantirá que o comando <code>node ace migration:rollback</code> resulte em um erro.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  pg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    client</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    migrations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      disableRollbacksInProduction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="evite-tarefas-de-migracao-simultaneas" tabindex="-1">Evite tarefas de migração simultâneas <a class="header-anchor" href="#evite-tarefas-de-migracao-simultaneas" aria-label="Permalink to &quot;Evite tarefas de migração simultâneas&quot;">​</a></h3><p>Ao implantar seu aplicativo AdonisJS em vários servidores, certifique-se de executar as migrações de apenas um servidor e não de todos eles.</p><p>Para MySQL e PostgreSQL, o Lucid obterá <a href="https://www.postgresql.org/docs/9.4/explicit-locking.html#ADVISORY-LOCKS" target="_blank" rel="noreferrer">bloqueios consultivos</a> para garantir que a migração simultânea não seja permitida. No entanto, é melhor evitar executar migrações de vários servidores em primeiro lugar.</p><h2 id="armazenamento-persistente-para-uploads-de-arquivos" tabindex="-1">Armazenamento persistente para uploads de arquivos <a class="header-anchor" href="#armazenamento-persistente-para-uploads-de-arquivos" aria-label="Permalink to &quot;Armazenamento persistente para uploads de arquivos&quot;">​</a></h2><p>Plataformas de implantação modernas como Amazon ECS, Heroku ou aplicativos DigitalOcean executam o código do seu aplicativo dentro de um <a href="https://devcenter.heroku.com/articles/dynos#ephemeral-filesystem" target="_blank" rel="noreferrer">sistema de arquivos efêmero</a>, o que significa que cada implantação destruirá o sistema de arquivos existente e criará um novo.</p><p>Você perderá os arquivos enviados pelo usuário se armazenados no mesmo armazenamento que o código do seu aplicativo. Portanto, você deve considerar usar o <a href="./../digging-deeper/drive.html">Drive</a> para manter os arquivos enviados pelo usuário em um serviço de armazenamento em nuvem como Amazon S3 ou Google Cloud Storage.</p><h2 id="logging" tabindex="-1">Logging <a class="header-anchor" href="#logging" aria-label="Permalink to &quot;Logging&quot;">​</a></h2><p>O <a href="./../digging-deeper/logger.html">AdonisJS Logger</a> grava logs em <code>stdout</code> e <code>stderr</code> no formato JSON. Você pode configurar um serviço de log externo para ler os logs de stdout/stderr ou encaminhá-los para um arquivo local no mesmo servidor.</p><p>Os pacotes do núcleo e do ecossistema do framework gravam logs no nível <code>trace</code>. Portanto, você deve definir o nível de log como <code>trace</code> ao depurar os internos do framework.</p><h2 id="depurando-consultas-de-banco-de-dados" tabindex="-1">Depurando consultas de banco de dados <a class="header-anchor" href="#depurando-consultas-de-banco-de-dados" aria-label="Permalink to &quot;Depurando consultas de banco de dados&quot;">​</a></h2><p>O Lucid ORM emite o evento <code>db:query</code> quando a depuração de banco de dados é ativada. Você pode ouvir esse evento e depurar as consultas SQL usando o Logger.</p><p>A seguir, um exemplo de impressão bonita das consultas de banco de dados em desenvolvimento e usando o Logger em produção.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// start/event.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@ioc:Adonis/Core/Event&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Logger </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@ioc:Adonis/Core/Logger&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Database </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@ioc:Adonis/Lucid/Database&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Application </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@ioc:Adonis/Core/Application&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Event.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;db:query&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Application.inProduction) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(query.sql)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prettyPrint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(query)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="variaveis-​​de-ambiente" tabindex="-1">Variáveis ​​de ambiente <a class="header-anchor" href="#variaveis-​​de-ambiente" aria-label="Permalink to &quot;Variáveis ​​de ambiente&quot;">​</a></h2><p>Você deve manter suas variáveis ​​de ambiente de produção seguras e não mantê-las junto com o código do seu aplicativo. Se você estiver usando uma plataforma de implantação como Cleavr, Heroku e assim por diante, você deve gerenciar variáveis ​​de ambiente a partir do painel da web deles.</p><p>Ao implantar seu código em um servidor básico, você pode manter suas variáveis ​​de ambiente dentro do arquivo <code>.env</code>. O arquivo também pode ficar fora da base de código do aplicativo. Certifique-se de informar o AdonisJS sobre sua localização usando a variável de ambiente <code>ENV_PATH</code>.</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ENV_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/myapp/.env</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="cache-de-visualizacoes" tabindex="-1">Cache de visualizações <a class="header-anchor" href="#cache-de-visualizacoes" aria-label="Permalink to &quot;Cache de visualizações&quot;">​</a></h2><p>Você deve armazenar em cache os modelos do Edge em produção usando a variável de ambiente <code>CACHE_VIEWS</code>. Os modelos são armazenados em cache na memória em tempo de execução e nenhuma pré-compilação é necessária.</p><div class="language-dotenv vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">CACHE_VIEWS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="servindo-ativos-estaticos" tabindex="-1">Servindo ativos estáticos <a class="header-anchor" href="#servindo-ativos-estaticos" aria-label="Permalink to &quot;Servindo ativos estáticos&quot;">​</a></h2><p>Servir ativos estáticos de forma eficaz é essencial para o desempenho do seu aplicativo. Independentemente da rapidez dos seus aplicativos AdonisJS, a entrega de ativos estáticos desempenha um papel importante para uma melhor experiência do usuário.</p><h3 id="usando-um-servico-cdn" tabindex="-1">Usando um serviço CDN <a class="header-anchor" href="#usando-um-servico-cdn" aria-label="Permalink to &quot;Usando um serviço CDN&quot;">​</a></h3><p>A melhor abordagem é usar um CDN para entregar os ativos estáticos do seu aplicativo AdonisJS.</p><p>Os ativos front-end compilados usando <a href="./../http/assets-manager.html">Webpack Encore</a> são marcados com impressão digital, e isso permite que seu servidor CDN os armazene em cache agressivamente.</p><p>Dependendo do serviço CDN que você está usando e da sua técnica de implantação, pode ser necessário adicionar uma etapa ao seu processo de implantação para mover os arquivos estáticos para o servidor CDN. É assim que deve funcionar em poucas palavras.</p><ul><li>Atualize <code>webpack.config.js</code> para usar a URL do CDN ao criar a compilação de produção.</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Encore.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isProduction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Encore.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPublicPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://your-cdn-server-url/assets&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Encore.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setManifestKeyPrefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;assets/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Encore.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPublicPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/assets&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>Crie seu aplicativo AdonisJS normalmente. <a href="https://github.com/adonisjs-community/polls-app/blob/main/commands/PublishAssets.ts" target="_blank" rel="noreferrer">aqui está um comando</a> que usamos para publicar os ativos em um bucket do Amazon S3.</li></ul><h3 id="usando-o-nginx-para-entregar-arquivos-estaticos" tabindex="-1">Usando o NGINX para entregar arquivos estáticos <a class="header-anchor" href="#usando-o-nginx-para-entregar-arquivos-estaticos" aria-label="Permalink to &quot;Usando o NGINX para entregar arquivos estáticos&quot;">​</a></h3><p>Outra opção é descarregar a tarefa de servir ativos para o NGINX. Se você usar o Webpack Encore para compilar os ativos do front-end, você deve armazenar em cache agressivamente todos os arquivos estáticos, pois eles são marcados com impressão digital.</p><p>Adicione o seguinte bloco ao seu arquivo de configuração do NGINX. <strong>Certifique-se de substituir os valores dentro dos colchetes angulares <code>&lt;&gt;</code></strong>.</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> \\.(jpg|png|css|js|gif|ico|woff|woff2) </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;PATH_TO_ADONISJS_APP_PUBLIC_DIRECTORY&gt;;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  sendfile </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  sendfile_max_chunk </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  add_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Cache-Control </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;public&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">365d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="usando-o-servidor-de-arquivo-estatico-adonisjs" tabindex="-1">Usando o servidor de arquivo estático AdonisJS <a class="header-anchor" href="#usando-o-servidor-de-arquivo-estatico-adonisjs" aria-label="Permalink to &quot;Usando o servidor de arquivo estático AdonisJS&quot;">​</a></h3><p>Você também pode contar com o servidor de arquivo estático integrado do AdonisJS para servir os ativos estáticos do diretório <code>public</code> para manter as coisas simples.</p><p>Nenhuma configuração adicional é necessária. Basta implantar seu aplicativo AdonisJS como de costume, e a solicitação de ativos estáticos será atendida automaticamente. No entanto, se você usar o Webpack Encore para compilar seus ativos front-end, você deve atualizar o arquivo <code>config/static.ts</code> com as seguintes opções.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config/static.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ... resto da configuração</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  maxAge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;365d&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  immutable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,70)]))}const u=a(r,[["render",p]]);export{k as __pageData,u as default};
