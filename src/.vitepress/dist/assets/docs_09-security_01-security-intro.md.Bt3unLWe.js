import{_ as s,c as a,o as i,a4 as e}from"./chunks/framework.nQaBHiNx.js";const E=JSON.parse('{"title":"Introdução","description":"","frontmatter":{},"headers":[],"relativePath":"docs/09-security/01-security-intro.md","filePath":"docs/09-security/01-security-intro.md"}'),o={name:"docs/09-security/01-security-intro.md"},n=e(`<h1 id="introducao" tabindex="-1">Introdução <a class="header-anchor" href="#introducao" aria-label="Permalink to &quot;Introdução&quot;">​</a></h1><p>Manter os aplicativos da web seguros é uma das coisas mais importantes. O AdonisJs vem com várias camadas de segurança e higienização de dados para manter seus aplicativos da web longe de ataques comuns.</p><div class="danger custom-block"><p class="custom-block-title">OBSERVAÇÃO</p><p>Se você encontrar algum bug de segurança, compartilhe-o em <a href="mailto:virk@adonisjs.com" target="_blank" rel="noreferrer">virk@adonisjs.com</a>. Não crie um problema no GitHub, pois isso pode afetar os aplicativos em execução na produção. Divulgaremos o problema após enviar o patch para o bug.</p></div><h2 id="injecao-de-sql" tabindex="-1">Injeção de SQL <a class="header-anchor" href="#injecao-de-sql" aria-label="Permalink to &quot;Injeção de SQL&quot;">​</a></h2><p>A injeção de SQL é um dos ataques mais comuns da web, em que o usuário final fará uso das entradas e passará a consulta SQL em vez do <em>nome de usuário</em>, <em>e-mail</em>, etc.</p><p>Os modelos Lucid e o construtor de consultas de banco de dados garantirão a execução de instruções preparadas, o que, por sua vez, evita a injeção de SQL. Enquanto seu aplicativo pode ter o requisito de executar consultas SQL <code>raw</code>, em vez de usar o método do construtor de consultas, é recomendável aproveitar o método <code>raw</code> e passar as ligações como parâmetros.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Não recomendado</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;username&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> users</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> yield</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Database</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;users&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`username = \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Maneira correta</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;username&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> users</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> yield</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Database</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;users&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">raw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;username = ?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [username]))</span></span></code></pre></div><h4 id="lista-de-verificacao" tabindex="-1">Lista de verificação <a class="header-anchor" href="#lista-de-verificacao" aria-label="Permalink to &quot;Lista de verificação&quot;">​</a></h4><ul><li><a href="/docs/05-database/02-query-builder.html">provedor de banco de dados</a> ou</li><li><a href="/docs/07-common-web-tools/11-validator.html#sanitizedata-rules">sanitizer</a> para manter seu banco de dados seguro.</li><li>Sempre execute instruções <em>prepared statements</em> passando valores de consulta como uma matriz para o método <code>raw</code>.</li></ul><h2 id="seguranca-de-sessao" tabindex="-1">Segurança de sessão <a class="header-anchor" href="#seguranca-de-sessao" aria-label="Permalink to &quot;Segurança de sessão&quot;">​</a></h2><p>As sessões podem vazar informações importantes se não forem tratadas com cuidado. O AdonisJs criptografará e assinará todos os cookies usando o <code>APP_KEY</code> definido no arquivo <code>.env</code>. Certifique-se de manter o <code>APP_KEY</code> em segredo e nunca o compartilhe com ninguém e nunca o envie para sistemas de controle de versão como o Github.</p><h3 id="configuracao-de-sessao" tabindex="-1">Configuração de sessão <a class="header-anchor" href="#configuracao-de-sessao" aria-label="Permalink to &quot;Configuração de sessão&quot;">​</a></h3><p>A configuração da sessão é salva dentro do arquivo <code>config/session.js</code>, você pode configurar opções conforme suas necessidades e certifique-se de dar aviso aos seguintes pares de chave/valor.</p><h4 id="configuracoes-importantes" tabindex="-1">Configurações importantes <a class="header-anchor" href="#configuracoes-importantes" aria-label="Permalink to &quot;Configurações importantes&quot;">​</a></h4><ul><li>Certifique-se de que <code>httpOnly</code> esteja definido como <em>true</em>. Mantê-lo como <em>false</em> o tornará acessível usando Javascript via <code>document.cookie</code>.</li><li>Além disso, a propriedade <code>sameSite</code> garante que seu cookie de sessão não seja visível/acessível de diferentes domínios.</li></ul><h2 id="formularios-e-visualizacoes" tabindex="-1">Formulários e visualizações <a class="header-anchor" href="#formularios-e-visualizacoes" aria-label="Permalink to &quot;Formulários e visualizações&quot;">​</a></h2><p>Para manter o ciclo de desenvolvimento simples e produtivo, o AdonisJs vem com alguns recursos que você pode querer considerar antes de lançar seu site ao público.</p><h3 id="falsificacao-de-metodo-de-formulario" tabindex="-1">Falsificação de método de formulário <a class="header-anchor" href="#falsificacao-de-metodo-de-formulario" aria-label="Permalink to &quot;Falsificação de método de formulário&quot;">​</a></h3><p>Os formulários HTML são capazes apenas de fazer solicitações <em>GET</em> e <em>POST</em>, o que significa que você não pode usar todos os verbos HTTP para executar operações RESTful. Para facilitar isso, o AdonisJs permite que você defina o método HTTP como uma string de consulta dentro da URL, o que é conhecido como <em>Form method spoofing</em>.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Route</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Route.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/users/:id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;UserController.update&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- View --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">form</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/users/1?_method=PUT&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> method</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;POST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Definir <code>_method=PUT</code> converterá o método HTTP para <code>PUT</code> em vez de <code>POST</code>. Isso torna muito mais fácil usar qualquer verbo HTTP simplesmente falsificando-o. Aqui estão algumas coisas que você deve estar ciente.</p><h4 id="lista-de-verificacao-1" tabindex="-1">Lista de verificação <a class="header-anchor" href="#lista-de-verificacao-1" aria-label="Permalink to &quot;Lista de verificação&quot;">​</a></h4><ul><li>O AdonisJs só falsificará métodos quando o método HTTP real for <code>POST</code>, o que significa que fazer uma solicitação <code>GET</code> com <em>_method</em> não terá efeito.</li><li>Você pode desativar a falsificação de formulário definindo <code>allowMethodSpoofing=false</code> dentro de <code>config/app.js</code>.<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  allowMethodSpoofing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><h3 id="injetando-ligacoes-de-conteiner-ioc-em-visualizacoes" tabindex="-1">Injetando ligações de contêiner IoC em visualizações <a class="header-anchor" href="#injetando-ligacoes-de-conteiner-ioc-em-visualizacoes" aria-label="Permalink to &quot;Injetando ligações de contêiner IoC em visualizações&quot;">​</a></h3><p>O AdonisJs simplifica para você <code>usar</code> ligações de contêiner IoC em suas visualizações, o que significa que você pode acessar <em>modelos Lucid</em> de suas visualizações para buscar dados do banco de dados. Saiba mais sobre <a href="/docs/04-views/01-views.html#injecting-providers">injetar provedores</a></p><p>Este recurso pode abrir algumas brechas de segurança sérias se suas visualizações forem editáveis ​​pelo mundo externo. Por exemplo, você está criando um CMS usando o AdonisJs e quer que seus usuários criem parciais de visualização reutilizáveis. O usuário final pode buscar o <em>Modelo de Usuário</em> dentro de seu parcial e pode excluir todos os usuários.</p><h4 id="lista-de-verificacao-2" tabindex="-1">Lista de verificação <a class="header-anchor" href="#lista-de-verificacao-2" aria-label="Permalink to &quot;Lista de verificação&quot;">​</a></h4><ul><li>Certifique-se de definir <code>injectServices=false</code> dentro do arquivo <code>config/app.js</code>.<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">views</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  injectServices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li>Se estiver usando injeção de serviço, certifique-se de que suas visualizações não sejam editáveis ​​pelo mundo externo.</li></ul><h2 id="uploads-de-arquivo" tabindex="-1">Uploads de arquivo <a class="header-anchor" href="#uploads-de-arquivo" aria-label="Permalink to &quot;Uploads de arquivo&quot;">​</a></h2><p>Os invasores geralmente tentam fazer upload de arquivos maliciosos para o servidor e depois executam esses arquivos para obter acesso ao servidor ou realizar algumas ações destrutivas.</p><p>Não apenas os arquivos são enviados para adquirir o acesso ao servidor, muitas vezes você encontrará pessoas tentando fazer upload de arquivos enormes para que seu servidor fique ocupado enviando arquivos e comece a lançar erros de <em>TEMPO LIMITE</em> para outras solicitações.</p><p>Para lidar com essa parte, o AdonisJs permite que você defina o <em>tamanho máximo de upload</em> a ser processado pelo servidor, o que significa que qualquer arquivo maior que o tamanho especificado será negado sem processamento e mantém seu servidor em um estado saudável.</p><h4 id="lista-de-verificacao-3" tabindex="-1">Lista de verificação <a class="header-anchor" href="#lista-de-verificacao-3" aria-label="Permalink to &quot;Lista de verificação&quot;">​</a></h4><ul><li>Certifique-se de definir <code>maxSize</code> dentro do arquivo <code>config/bodyParser.js</code>.</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  uploads</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    maxSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2mb&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><ul><li>Nunca armazene arquivos enviados dentro do diretório <code>public</code>, pois os arquivos no diretório <code>public</code> podem ser acessados ​​diretamente.</li><li>Sempre renomeie os arquivos antes de enviar.</li><li>Nunca compartilhe a localização real do arquivo com os usuários finais. Em vez disso, tente salvar a referência do arquivo dentro do banco de dados com um <em>id exclusivo</em> e configure uma rota para o servidor do arquivo usando o <code>id</code>.<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Examplo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Helpers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Helpers&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Route.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/download/:fileId&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fileId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fileId&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> yield</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Files.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findorFail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fileId)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">download</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Helpers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">storagePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;uploads/\${file.path}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li></ul>`,38),t=[n];function l(r,d,p,h,k,c){return i(),a("div",null,t)}const g=s(o,[["render",l]]);export{E as __pageData,g as default};
