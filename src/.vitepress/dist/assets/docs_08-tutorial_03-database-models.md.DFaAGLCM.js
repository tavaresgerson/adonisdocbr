import{_ as s,c as a,o as i,a4 as e}from"./chunks/framework.nQaBHiNx.js";const m=JSON.parse('{"title":"Modelos de Banco de Dados","description":"","frontmatter":{},"headers":[],"relativePath":"docs/08-tutorial/03-database-models.md","filePath":"docs/08-tutorial/03-database-models.md"}'),n={name:"docs/08-tutorial/03-database-models.md"},t=e(`<h1 id="modelos-de-banco-de-dados" tabindex="-1">Modelos de Banco de Dados <a class="header-anchor" href="#modelos-de-banco-de-dados" aria-label="Permalink to &quot;Modelos de Banco de Dados&quot;">​</a></h1><p>Até agora cobrimos os básicos de configuração de uma nova aplicação AdonisJS criando Rotas, Controladores e renderizando Views. Neste tutorial, vamos dar um passo à frente aprendendo sobre <em>Modelos de Banco de Dados</em>.</p><p>AdonisJS suporta a maioria dos bancos de dados SQL. Aqui está um guia completo sobre <a href="/banco-de-dados/configuração-do-banco-de-dados.html">Configuração do Banco de Dados</a>. Vamos começar criando migrações e modelos de dados, também conhecidos como modelos Lucid.</p><h2 id="o-que-e-um-modelo-de-banco-de-dados" tabindex="-1">O que é um Modelo de Banco de Dados? <a class="header-anchor" href="#o-que-e-um-modelo-de-banco-de-dados" aria-label="Permalink to &quot;O que é um Modelo de Banco de Dados?&quot;">​</a></h2><p>Cada modelo de banco de dados representa uma única tabela SQL dentro do seu banco de dados. Por exemplo:</p><table><thead><tr><th>Modelo</th><th>Tabela de banco de dados</th></tr></thead><tbody><tr><td>Usuário</td><td>usuários</td></tr><tr><td>Post</td><td>postagens</td></tr><tr><td>Categoria</td><td>categorias</td></tr></tbody></table><p>Espero que faça sentido. Agora para interagir com as postagens, precisamos de duas coisas.</p><ol><li>Um Modelo de Publicação.</li><li>E uma tabela de banco de dados de postagens.</li></ol><h2 id="criando-modelo-de-banco-de-dados" tabindex="-1">Criando Modelo de Banco de Dados <a class="header-anchor" href="#criando-modelo-de-banco-de-dados" aria-label="Permalink to &quot;Criando Modelo de Banco de Dados&quot;">​</a></h2><p>Os modelos vivem dentro de um diretório dedicado chamado <em>app/Model</em>. Vamos usar o Ace para criar o modelo de postagem.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make:model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Post</span></span></code></pre></div><p>Saída:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>create: app/Model/Post.js</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// app/Model/Post.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Lucid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Lucid&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Lucid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Post</span></span></code></pre></div><p>Cada modelo é uma classe <em>ES2015</em> dedicada, assim como nossos <a href="/getting-started/controladores.html">Controladores</a>, mas cada modelo irá estender o Lucid para torná-lo diferente de uma classe comum.</p><p>Você nunca precisa tocar em seus modelos na maioria dos casos. Então, vamos deixar este arquivo como está e mudar para outra tarefa.</p><h2 id="o-que-sao-migracoes" tabindex="-1">O que são Migrações? <a class="header-anchor" href="#o-que-sao-migracoes" aria-label="Permalink to &quot;O que são Migrações?&quot;">​</a></h2><p>Nosso próximo passo é escolher um banco de dados com o qual queremos trabalhar e criar as tabelas necessárias. Para simplificar, vamos nos apegar ao <em>SQLite</em>. No entanto, você está livre para usar o <em>MySQL</em> ou o <em>PostgreSQL</em>.</p><p>A migração é um processo de criação de tabelas de banco de dados usando o código Javascript. As migrações têm muitos benefícios em comparação com o fluxo de trabalho padrão de criação de tabelas de banco de dados usando SequelPro, Workbench, etc. Consulte a [Migração] ( / banco de dados / migrações ) para saber mais sobre eles.</p><h2 id="criando-migracoes" tabindex="-1">Criando Migrações <a class="header-anchor" href="#criando-migracoes" aria-label="Permalink to &quot;Criando Migrações&quot;">​</a></h2><p>Como sempre o <em>ace (nosso amigo)</em> vai criar uma migração para nós.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make:migration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> posts</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --create=posts</span></span></code></pre></div><p>Saída:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>create: database/migrations/1464075245386_posts.js</span></span></code></pre></div><p>Abra rapidamente este arquivo e explore as opções para criar tabela de banco de dados sem tocar na interface SQL.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// database/migrations/1464075245386_posts.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Schema</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Schema&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PostSchema</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  up</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;posts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">increments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;title&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;content&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timestamps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  down</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;posts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PostSchema</span></span></code></pre></div><p>Uau! É tão simples definir uma tabela de banco de dados dentro dos seus arquivos padrão Js. Apenas mantenha um registro das seguintes observações ao trabalhar com migrações</p><ol><li>O método &#39;up&#39; é usado para criar uma tabela ou adicionar novos campos à tabela existente, etc.</li><li>O &quot;down&quot; é sempre o oposto do &quot;up&quot;. É usado quando você deseja desfazer as alterações que acabou de fazer, também conhecido como <em>rollback</em>.</li></ol><h2 id="driver-sqlite-executando-migracoes" tabindex="-1">Driver SQLite &amp; Executando Migrações <a class="header-anchor" href="#driver-sqlite-executando-migracoes" aria-label="Permalink to &quot;Driver SQLite &amp; Executando Migrações&quot;">​</a></h2><p>Finalmente, precisamos executar esta migração para executar a consulta SQL e criar a tabela do banco de dados chamada <em>posts</em>. Antes disso, precisamos ter certeza que o SQLite está configurado corretamente.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Installing SQLite3 driver</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sqlite3</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Running Migrations</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migration:run</span></span></code></pre></div><p>Saída:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>✔ Database migrated successfully.</span></span></code></pre></div><p>Cobrimos muito neste tutorial, especialmente se você for novo nesses conceitos. É assim mesmo que funciona com frameworks; você precisa passar alguns dias para ter uma boa compreensão das ferramentas e opções disponíveis para tornar seu ciclo de desenvolvimento muito mais fácil no futuro.</p>`,35),o=[t];function l(p,d,h,r,k,c){return i(),a("div",null,o)}const u=s(n,[["render",l]]);export{m as __pageData,u as default};
