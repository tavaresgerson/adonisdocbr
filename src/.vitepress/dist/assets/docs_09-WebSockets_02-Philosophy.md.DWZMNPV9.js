import{_ as a,c as e,a2 as i,o}from"./chunks/framework.YPpNXepj.js";const k=JSON.parse('{"title":"Filosofia","description":"","frontmatter":{},"headers":[],"relativePath":"docs/09-WebSockets/02-Philosophy.md","filePath":"docs/09-WebSockets/02-Philosophy.md"}'),t={name:"docs/09-WebSockets/02-Philosophy.md"};function n(p,s,d,l,r,c){return o(),e("div",null,s[0]||(s[0]=[i(`<h1 id="filosofia" tabindex="-1">Filosofia <a class="header-anchor" href="#filosofia" aria-label="Permalink to &quot;Filosofia&quot;">​</a></h1><p>Este guia aborda a filosofia do servidor WebSocket.</p><p>Ao final deste guia, você saberá sobre <em>canais</em>, <em>assinaturas de tópicos</em> e <em>multiplexação</em>.</p><h2 id="websockets-puros" tabindex="-1">WebSockets puros <a class="header-anchor" href="#websockets-puros" aria-label="Permalink to &quot;WebSockets puros&quot;">​</a></h2><p>O AdonisJs usa <a href="https://developer.mozilla.org/en-US/docs/Glossary/WebSockets" target="_blank" rel="noreferrer">WebSockets</a> puros e não depende de pesquisas.</p><p>Usando WebSockets puros (com suporte em todos os principais navegadores), o AdonisJs facilita o <em>dimensionamento horizontal de aplicativos em um cluster Node.js</em> sem nenhuma dependência de terceiros (por exemplo, Redis) e sem a necessidade de sessões persistentes.</p><h2 id="multiplexacao" tabindex="-1">Multiplexação <a class="header-anchor" href="#multiplexacao" aria-label="Permalink to &quot;Multiplexação&quot;">​</a></h2><p>A multiplexação reutiliza a mesma conexão TCP enquanto separa as camadas de <em>evento</em> e <em>autenticação</em> entre os canais.</p><p>A multiplexação mantém uma única conexão do cliente para o servidor, com o AdonisJS fornecendo uma camada de abstração limpa para gerenciar assinaturas de canais e trocar mensagens do seu aplicativo.</p><h2 id="canais-e-topicos" tabindex="-1">Canais e tópicos <a class="header-anchor" href="#canais-e-topicos" aria-label="Permalink to &quot;Canais e tópicos&quot;">​</a></h2><p>Depois que um cliente faz uma conexão WebSocket, ele precisa assinar um <em>tópico</em> para trocar mensagens.</p><p>Canais e tópicos são inter-relacionados, então vamos escrever algum código para entendê-los melhor.</p><p>Registre um canal assim:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ws.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">channel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;chat&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">socket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(socket.topic)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>No exemplo acima, todas as assinaturas do canal <code>chat</code> têm um tópico estático chamado <code>chat</code> (ou seja, o canal e o nome do tópico são os mesmos).</p><p>Para registrar um canal com tópicos dinâmicos/curinga:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ws.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">channel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;chat:*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">socket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(socket.topic)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>No exemplo acima, o canal <code>chat</code> aceita tópicos dinâmicos, então um usuário pode se inscrever no canal <code>chat:watercooler</code>, <code>chat:intro</code>, <code>chat:news</code>, etc.</p><p>Essa abordagem dinâmica/curinga abre um mundo emocionante de possibilidades criativas (por exemplo, tópicos dinâmicos para chats privados entre dois usuários).</p><h2 id="codificadores-de-dados" tabindex="-1">Codificadores de dados <a class="header-anchor" href="#codificadores-de-dados" aria-label="Permalink to &quot;Codificadores de dados&quot;">​</a></h2><p>O servidor WebSocket usa codificadores de dados ao passar mensagens.</p><p>Por padrão, o servidor WebSocket usa o codificador JSON, que tem limitações ao passar dados binários.</p><p>Se necessário, o pacote AdonisJs <a href="https://www.npmjs.com/package/@adonisjs/msgpack-encoder" target="_blank" rel="noreferrer">@adonisjs/msgpack-encoder</a> pode ser usado para manipular <em>ArrayBuffers</em> e <em>Blobs</em>.</p><h2 id="pacotes-de-mensagens" tabindex="-1">Pacotes de mensagens <a class="header-anchor" href="#pacotes-de-mensagens" aria-label="Permalink to &quot;Pacotes de mensagens&quot;">​</a></h2><p>A multiplexação requer um padrão para definir a estrutura do pacote de dados.</p><p>Como consumidor do pacote do servidor WebSocket, você não precisa se preocupar com os tipos de pacotes, mas ao escrever um cliente para o servidor, é extremamente importante entendê-los.</p><p>Seu codificador de dados WebSocket decodifica dados de rede como um <em>objeto</em> (ou tipo de dados equivalente para sua linguagem de programação) contendo uma estrutura semelhante a:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    topic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;chat&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello world&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol><li>A propriedade <code>t</code> é o tipo do pacote (usamos números em vez de strings, pois números são menos dados para transferir).</li><li>A propriedade <code>d</code> são os dados associados a esse pacote.</li></ol><div class="tip custom-block"><p class="custom-block-title">DICA</p><p>Saiba mais sobre os pacotes AdonisJs WebSocket <a href="https://github.com/adonisjs/adonis-websocket-protocol" target="_blank" rel="noreferrer">aqui</a>.</p></div>`,30)]))}const m=a(t,[["render",n]]);export{k as __pageData,m as default};
