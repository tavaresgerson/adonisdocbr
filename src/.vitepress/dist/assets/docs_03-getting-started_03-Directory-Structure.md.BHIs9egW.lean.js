import{_ as s,c as i,a2 as e,o as t}from"./chunks/framework.YPpNXepj.js";const k=JSON.parse('{"title":"Estrutura de diretório","description":"","frontmatter":{},"headers":[],"relativePath":"docs/03-getting-started/03-Directory-Structure.md","filePath":"docs/03-getting-started/03-Directory-Structure.md"}'),o={name:"docs/03-getting-started/03-Directory-Structure.md"};function r(n,a,p,d,l,h){return t(),i("div",null,a[0]||(a[0]=[e(`<h1 id="estrutura-de-diretorio" tabindex="-1">Estrutura de diretório <a class="header-anchor" href="#estrutura-de-diretorio" aria-label="Permalink to &quot;Estrutura de diretório&quot;">​</a></h1><p>A estrutura de diretório do AdonisJs pode parecer esmagadora à primeira vista, pois há um punhado de diretórios pré-configurados.</p><p>Gradualmente, você entenderá o benefício de separar suas entidades em vários diretórios, mantendo seu código sustentável e fácil de pesquisar.</p><p>Uma instalação padrão do AdonisJs se parece com isso:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> database/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrations/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> seeds/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> factory.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> resources/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> views/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> storage/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> routes.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ace</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package.json</span></span></code></pre></div><h2 id="diretorios-raiz" tabindex="-1">Diretórios raiz <a class="header-anchor" href="#diretorios-raiz" aria-label="Permalink to &quot;Diretórios raiz&quot;">​</a></h2><h3 id="app" tabindex="-1">app <a class="header-anchor" href="#app" aria-label="Permalink to &quot;app&quot;">​</a></h3><p>O diretório <code>app</code> é o lar da lógica do seu aplicativo.</p><p>Ele é carregado automaticamente sob o namespace <code>App</code>.</p><h3 id="config" tabindex="-1">config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;config&quot;">​</a></h3><p>O diretório <code>config</code> é usado para definir a configuração do seu aplicativo.</p><p>O AdonisJs vem com vários arquivos de configuração, mas sinta-se à vontade para criar o seu próprio.</p><p><a href="/docs/03-getting-started/02-Configuration.html">Leia mais sobre configuração</a>.</p><h3 id="database" tabindex="-1">database <a class="header-anchor" href="#database" aria-label="Permalink to &quot;database&quot;">​</a></h3><p>O diretório <code>database</code> é usado para armazenar todos os arquivos relacionados ao banco de dados.</p><p><a href="/docs/07-Database/01-Getting-Started.html">Leia mais sobre bancos de dados</a>.</p><h3 id="public" tabindex="-1">public <a class="header-anchor" href="#public" aria-label="Permalink to &quot;public&quot;">​</a></h3><p>O diretório <code>public</code> é usado para servir ativos estáticos por HTTP.</p><p>Este diretório é mapeado para a raiz do seu site:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- o arquivo real é armazenado em /public/style.css --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stylesheet&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/style.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><h3 id="resources" tabindex="-1">resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;resources&quot;">​</a></h3><p>O diretório <code>resources</code> é usado para armazenar arquivos de apresentação para seu aplicativo, como modelos de visualização, arquivos LESS/SASS, JavaScript não compilado ou até mesmo imagens.</p><h3 id="start" tabindex="-1">start <a class="header-anchor" href="#start" aria-label="Permalink to &quot;start&quot;">​</a></h3><p>O diretório <code>start</code> é usado para armazenar arquivos que são carregados na inicialização do seu aplicativo. Por padrão, você encontrará <code>app.js</code>, <code>kernel.js</code> e <code>routes.js</code>.</p><h3 id="test" tabindex="-1">test <a class="header-anchor" href="#test" aria-label="Permalink to &quot;test&quot;">​</a></h3><p>O diretório <code>test</code> é usado para armazenar todos os seus testes de aplicativo. O pacote testing não é incluído por padrão – você pode instalá-lo seguindo as instruções definidas link:testing[aqui].</p><h2 id="diretorios-app" tabindex="-1">Diretórios app <a class="header-anchor" href="#diretorios-app" aria-label="Permalink to &quot;Diretórios app&quot;">​</a></h2><h3 id="app-commands" tabindex="-1">app/Commands <a class="header-anchor" href="#app-commands" aria-label="Permalink to &quot;app/Commands&quot;">​</a></h3><p>O diretório <code>app/Commands</code> é usado para armazenar todos os seus comandos CLI. Este diretório é criado automaticamente quando você executa <code>adonis make:command &lt;name&gt;</code>.</p><h3 id="app-controllers" tabindex="-1">app/Controllers <a class="header-anchor" href="#app-controllers" aria-label="Permalink to &quot;app/Controllers&quot;">​</a></h3><p>O diretório <code>app/Controllers</code> é usado para armazenar todos os seus controladores <code>Http</code> e <code>WebSocket</code>. Este diretório é criado automaticamente quando você executa <code>adonis make:controller &lt;name&gt;</code>.</p><h3 id="app-exceptions" tabindex="-1">app/Exceptions <a class="header-anchor" href="#app-exceptions" aria-label="Permalink to &quot;app/Exceptions&quot;">​</a></h3><p>O diretório <code>app/Exceptions</code> é usado para armazenar o manipulador de exceção global e todas as suas exceções personalizadas. Este diretório é criado automaticamente quando você executa <code>adonis make:ehandler</code> ou <code>adonis make:exception &lt;name&gt;</code>.</p><h3 id="app-listeners" tabindex="-1">app/Listeners <a class="header-anchor" href="#app-listeners" aria-label="Permalink to &quot;app/Listeners&quot;">​</a></h3><p>O diretório <code>app/Listeners</code> é usado para armazenar todos os ouvintes de eventos. Este diretório é criado automaticamente quando você executa <code>adonis make:listener &lt;name&gt;</code>.</p><h3 id="app-middleware" tabindex="-1">app/Middleware <a class="header-anchor" href="#app-middleware" aria-label="Permalink to &quot;app/Middleware&quot;">​</a></h3><p>O diretório <code>app/Middleware</code> é usado para armazenar todos os seus middlewares. Este diretório é criado automaticamente quando você executa <code>adonis make:middleware &lt;nome&gt;</code>.</p><h3 id="app-models" tabindex="-1">app/Models <a class="header-anchor" href="#app-models" aria-label="Permalink to &quot;app/Models&quot;">​</a></h3><p>O diretório <code>app/Models</code> é usado para armazenar todos os seus modelos. Este diretório é criado automaticamente quando você executa <code>adonis make:model &lt;nome&gt;</code>.</p><h3 id="app-validators" tabindex="-1">app/Validators <a class="header-anchor" href="#app-validators" aria-label="Permalink to &quot;app/Validators&quot;">​</a></h3><p>O diretório <code>app/Validators</code> é usado para armazenar todos os seus validadores de rota. Este diretório é criado automaticamente quando você executa <code>adonis make:validator &lt;nome&gt;</code> (você precisa ter instalado o <a href="/src/docs/04-Basics/08-Validation.html">Validator Provider</a> para usar este comando).</p>`,41)]))}const u=s(o,[["render",r]]);export{k as __pageData,u as default};
