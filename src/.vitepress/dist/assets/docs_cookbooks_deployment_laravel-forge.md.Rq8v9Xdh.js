import{_ as s,c as i,a2 as e,o as n}from"./chunks/framework.BLTIpkzl.js";const u=JSON.parse('{"title":"Laravel Forge","description":"","frontmatter":{},"headers":[],"relativePath":"docs/cookbooks/deployment/laravel-forge.md","filePath":"docs/cookbooks/deployment/laravel-forge.md"}'),r={name:"docs/cookbooks/deployment/laravel-forge.md"};function p(l,a,o,t,d,c){return n(),i("div",null,a[0]||(a[0]=[e(`<h1 id="laravel-forge" tabindex="-1">Laravel Forge <a class="header-anchor" href="#laravel-forge" aria-label="Permalink to &quot;Laravel Forge&quot;">​</a></h1><p>Este guia abrange as etapas de ação para implantar um aplicativo AdonisJS no <a href="https://forge.laravel.com" target="_blank" rel="noreferrer">Laravel Forge</a>.</p><p>Implantar um aplicativo AdonisJS não é diferente de implantar um aplicativo Node.js padrão. Você só precisa ter algumas coisas em mente:</p><ul><li>Você constrói sua fonte TypeScript para JavaScript, antes de implantar o aplicativo.</li><li>Você terá que iniciar o servidor a partir da pasta <code>build</code> e não da raiz do projeto. O mesmo vale para executar migrações em qualquer outro aplicativo Node.js.</li></ul><p>Você pode construir seu projeto para produção executando o seguinte comando ace. Saiba mais sobre o <a href="/docs/guides/fundamentals/typescript-build-process.html">processo de construção TypeScript</a></p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --production</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># OU use o script npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="crie-um-servidor" tabindex="-1">Crie um servidor <a class="header-anchor" href="#crie-um-servidor" aria-label="Permalink to &quot;Crie um servidor&quot;">​</a></h2><p>Selecione seu provedor preferido e crie um servidor</p><p>Assim que o servidor estiver pronto. Crie um usuário de banco de dados (opcional)</p><h3 id="criar-usuario-de-banco-de-dados" tabindex="-1">Criar usuário de banco de dados <a class="header-anchor" href="#criar-usuario-de-banco-de-dados" aria-label="Permalink to &quot;Criar usuário de banco de dados&quot;">​</a></h3><p>no menu lateral do seu servidor, selecione <strong>Banco de dados</strong></p><ul><li>Navegue até Adicionar usuário de banco de dados</li><li>Insira um nome de usuário e senha, você também pode selecionar este usuário Pode acessar quais bancos de dados</li><li>mantenha suas credenciais em um lugar seguro e use-as em .env</li></ul><h2 id="criar-um-site" tabindex="-1">Criar um site <a class="header-anchor" href="#criar-um-site" aria-label="Permalink to &quot;Criar um site&quot;">​</a></h2><p>Quando você cria um servidor no forge, precisamos criar um <a href="https://forge.laravel.com/docs/1.0/sites/the-basics.html" target="_blank" rel="noreferrer">site</a> ,</p><ul><li>Defina o <code>Domínio raiz</code> com o domínio desejado da sua API, ou seja, <strong>staging.api.yourdomain.com</strong>.</li><li>Selecione HTML estático como seu tipo de projeto.</li><li>Marque <code>Criar banco de dados</code> se quiser criar um banco de dados para seu aplicativo e selecione um Nome de banco de dados.</li></ul><p><img src="https://res.cloudinary.com/ayman-personal/image/upload/v1627988326/uploads/create-site-laravel-forge_vqyz2r.jpg" alt="image"></p><h3 id="configure-seu-script-de-implantacao-e-as-configuracoes-do-git" tabindex="-1">Configure seu script de implantação e as configurações do Git <a class="header-anchor" href="#configure-seu-script-de-implantacao-e-as-configuracoes-do-git" aria-label="Permalink to &quot;Configure seu script de implantação e as configurações do Git&quot;">​</a></h3><p>Script de implantação são os comandos que são executados quando você envia um commit para sua ramificação predefinida. No nosso caso para Adonisjs, precisamos acessar a pasta do aplicativo -&gt; então puxar as alterações -&gt; executar alguns comandos para migração e processo de construção.</p><p>O recurso &quot;Implantação rápida&quot; permite que você implante facilmente seus projetos quando você envia para seu provedor de controle de origem. Quando você envia para sua ramificação de implantação rápida configurada, o Forge extrairá seu código mais recente do controle de origem e executará o script de implantação configurado do seu aplicativo. Você pode habilitar o recurso de implantação rápida do Forge clicando no botão &quot;Habilitar implantação rápida&quot; na guia Aplicativos do painel de gerenciamento do seu site.</p><h4 id="para-desenvolvimento" tabindex="-1">para Desenvolvimento <a class="header-anchor" href="#para-desenvolvimento" aria-label="Permalink to &quot;para Desenvolvimento&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/forge/staging.api.yourdomain.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -df</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $FORGE_SITE_BRANCH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># migrar database</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migration:run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># instalar dependências npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> yarn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># recarregar pm2 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --update-env</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>tenha em mente que pela primeira vez você precisa executar o comando pm2 start no seu servidor, então o script de implantação irá recarregá-lo quando acionado.</p><h4 id="exemplo-de-como-executar-o-pm2-no-servidor-pela-primeira-vez" tabindex="-1">exemplo de como executar o pm2 no servidor pela primeira vez <a class="header-anchor" href="#exemplo-de-como-executar-o-pm2-no-servidor-pela-primeira-vez" aria-label="Permalink to &quot;exemplo de como executar o pm2 no servidor pela primeira vez&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pm2 start yarn --name api -- dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="para-producao" tabindex="-1">para Produção <a class="header-anchor" href="#para-producao" aria-label="Permalink to &quot;para Produção&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/forge/staging.api.yourdomain.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -df</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $FORGE_SITE_BRANCH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># migrar database</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migration:run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># instalar dependências npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Executar comando Build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --production</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Copiar arquivos env</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/forge/staging.api.yourdomain.com/build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --production</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../.env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./.env</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># recarregar pm2 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --update-env</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="configuracoes-do-git" tabindex="-1">Configurações do Git <a class="header-anchor" href="#configuracoes-do-git" aria-label="Permalink to &quot;Configurações do Git&quot;">​</a></h3><p>Certifique-se de fornecer o nome do repositório ao entrar no seu Repositório. Para provedores GitHub, GitLab e Bitbucket, você deve fornecer o nome no formato usuário/repositório</p><p><img src="https://res.cloudinary.com/ayman-personal/image/upload/v1627990130/uploads/git_c5kr4c.jpg" alt="image"></p><h3 id="criar-certificado-ssl" tabindex="-1">Criar certificado SSL <a class="header-anchor" href="#criar-certificado-ssl" aria-label="Permalink to &quot;Criar certificado SSL&quot;">​</a></h3><p>Após criar seu site, navegue até a aba <strong>SSL</strong> no menu lateral do site.</p><ul><li>Selecione seu tipo de certificado, neste exemplo usaremos LetsEncrypt</li><li>Insira o domínio do seu site, ou seja, (staging.api.yourdomain.com)</li><li>Clique em Obter certificado</li></ul><p><img src="https://res.cloudinary.com/ayman-personal/image/upload/v1627988526/uploads/ssl-LetsEncrypt_srj73r.jpg" alt="image"></p><h3 id="defina-o-ambiente-do-seu-site" tabindex="-1">Defina o ambiente do seu site <a class="header-anchor" href="#defina-o-ambiente-do-seu-site" aria-label="Permalink to &quot;Defina o ambiente do seu site&quot;">​</a></h3><p>Navegue até o menu lateral do site e clique em <strong>Ambiente</strong></p><ul><li>copie o conteúdo do arquivo .env e cole-o lá.</li></ul><p><img src="https://res.cloudinary.com/ayman-personal/image/upload/v1627989008/uploads/env_qfx7vd.jpg" alt="image"></p><h3 id="configurar-ngnix" tabindex="-1">Configurar Ngnix <a class="header-anchor" href="#configurar-ngnix" aria-label="Permalink to &quot;Configurar Ngnix&quot;">​</a></h3><p>na aba <strong>Apps</strong> role para baixo até o botão de arquivo e selecione Editar configuração Nginx</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>   location / {</span></span>
<span class="line"><span>      # example proxy_pass http://localhost:3333;</span></span>
<span class="line"><span>      proxy_pass http://localhost:&lt;ADONIS_PORT&gt;;</span></span>
<span class="line"><span>      proxy_http_version 1.1;</span></span>
<span class="line"><span>      proxy_set_header Upgrade $http_upgrade;</span></span>
<span class="line"><span>      proxy_set_header Connection &#39;upgrade&#39;;</span></span>
<span class="line"><span>      proxy_set_header Host $host;</span></span>
<span class="line"><span>      proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>      proxy_set_header X-Forwarded-Proto $scheme;</span></span>
<span class="line"><span>      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>      proxy_cache_bypass $http_upgrade;</span></span>
<span class="line"><span>    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><img src="https://res.cloudinary.com/ayman-personal/image/upload/v1627990543/uploads/ngnix_r7vqg7.jpg" alt="image"></p>`,41)]))}const m=s(r,[["render",p]]);export{u as __pageData,m as default};
