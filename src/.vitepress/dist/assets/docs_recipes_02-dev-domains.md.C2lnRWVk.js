import{_ as s,c as e,a2 as i,o}from"./chunks/framework.YPpNXepj.js";const u=JSON.parse('{"title":"Usando domínios .dev","description":"","frontmatter":{},"headers":[],"relativePath":"docs/recipes/02-dev-domains.md","filePath":"docs/recipes/02-dev-domains.md"}'),t={name:"docs/recipes/02-dev-domains.md"};function n(r,a,d,p,l,h){return o(),e("div",null,a[0]||(a[0]=[i(`<h1 id="usando-dominios-dev" tabindex="-1">Usando domínios .dev <a class="header-anchor" href="#usando-dominios-dev" aria-label="Permalink to &quot;Usando domínios .dev&quot;">​</a></h1><p>Todos nós adoramos usar domínios <code>.dev</code> bonitos ao desenvolver nossos aplicativos em desenvolvimento. Nesta receita, aprendemos como vincular domínios personalizados ao seu aplicativo em vez de acessá-los via <code>localhost</code>.</p><div class="warning custom-block"><p class="custom-block-title">OBSERVAÇÃO</p><p>Esta técnica não tem nenhuma vantagem ou desvantagem, em vez disso, é usada como uma preferência pessoal em relação a domínios bonitos.</p></div><h2 id="configurar-hotel" tabindex="-1">Configurar hotel <a class="header-anchor" href="#configurar-hotel" aria-label="Permalink to &quot;Configurar hotel&quot;">​</a></h2><p>O primeiro passo é configurar uma ferramenta externa chamada <a href="https://www.npmjs.com/package/hotel" target="_blank" rel="noreferrer">hotel</a>. Ela permite que você registre domínios para um aplicativo ou uma URL.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hotel</span></span></code></pre></div><p>Em seguida, precisamos iniciá-lo como um daemon em <code>port=2000</code> usando o seguinte comando.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hotel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><p>Depois que estiver em execução, você pode executar o comando <code>hotel ls</code> para ver a lista de aplicativos/domínios registrados. Que está vazio com a nova instalação.</p><h2 id="configurar-proxy" tabindex="-1">Configurar proxy <a class="header-anchor" href="#configurar-proxy" aria-label="Permalink to &quot;Configurar proxy&quot;">​</a></h2><p>Vamos entender como isso funciona na teoria. Precisamos dizer ao nosso <em>navegador</em> ou <em>rede do sistema</em> para passar por um proxy, que atende nossos aplicativos <code>.dev</code> ou passa a solicitação para a URL real.</p><p>Todo o processo de proxy é muito leve e não afeta o desempenho ou a velocidade do seu sistema.</p><p>Agora que sabemos que toda a mágica é feita pelo proxy, vamos atualizar as configurações do navegador/sistema para passar pelo <a href="https://github.com/typicode/hotel/blob/master/docs/README.md#browser-configuration" target="_blank" rel="noreferrer">hotel proxy</a>.</p><h3 id="configuracao-do-sistema" tabindex="-1">Configuração do sistema <a class="header-anchor" href="#configuracao-do-sistema" aria-label="Permalink to &quot;Configuração do sistema&quot;">​</a></h3><p>Precisamos apontar a rede para o arquivo <a href="http://localhost:2000/proxy.pac" target="_blank" rel="noreferrer">http://localhost:2000/proxy.pac</a>.</p><h4 id="osx" tabindex="-1">Osx <a class="header-anchor" href="#osx" aria-label="Permalink to &quot;Osx&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Network Preferences &gt; Advanced &gt; Proxies &gt; Automatic Proxy Configuration</span></span></code></pre></div><h4 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Settings &gt; Network and Internet &gt; Proxy &gt; Use setup script</span></span></code></pre></div><h4 id="linux-ubuntu" tabindex="-1">Linux (ubuntu) <a class="header-anchor" href="#linux-ubuntu" aria-label="Permalink to &quot;Linux (ubuntu)&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>System Settings &gt; Network &gt; Network Proxy &gt; Automatic</span></span></code></pre></div><h3 id="configuracao-do-navegador" tabindex="-1">Configuração do navegador <a class="header-anchor" href="#configuracao-do-navegador" aria-label="Permalink to &quot;Configuração do navegador&quot;">​</a></h3><p>A configuração do navegador apenas faz proxy da solicitação para esse navegador e não para todo o sistema.</p><h4 id="chrome-saia-do-chrome-primeiro" tabindex="-1">Chrome (saia do Chrome primeiro) <a class="header-anchor" href="#chrome-saia-do-chrome-primeiro" aria-label="Permalink to &quot;Chrome (saia do Chrome primeiro)&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">google-chrome</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --proxy-pac-url=http://localhost:2000/proxy.pac</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># OS X</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">open</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Google Chrome&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --args</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --proxy-pac-url=http://localhost:2000/proxy.pac</span></span></code></pre></div><h4 id="firefox" tabindex="-1">Firefox <a class="header-anchor" href="#firefox" aria-label="Permalink to &quot;Firefox&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Preferences</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Advanced</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Network</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Connection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Settings</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Automatic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> proxy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> URL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configuration</span></span></code></pre></div><h2 id="integrar-com-adonisjs" tabindex="-1">Integrar com AdonisJs <a class="header-anchor" href="#integrar-com-adonisjs" aria-label="Permalink to &quot;Integrar com AdonisJs&quot;">​</a></h2><p>Agora que o hotel está configurado, podemos usá-lo independentemente do AdonisJs para qualquer aplicativo. No entanto, o problema é que todos os aplicativos registrados com <code>hotel</code> são mapeados para sempre, a menos que você os remova manualmente.</p><p>Esse comportamento pode causar problemas, onde você deseja seus <em>domínios descartáveis</em> que vivem até que seu aplicativo esteja em execução.</p><p>O comando Adonis cli <code>adonis serve</code> aceita um sinalizador que registra um domínio descartável com o <em>hotel</em> e o remove quando você para seu aplicativo.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adonis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --domain=yardstick@http://localhost:3333</span></span></code></pre></div><p>O sinalizador <code>--domain</code> pega o <em>domínio</em> e o <em>URL</em>. Neste caso</p><ul><li><code>domain=yardstick</code></li><li><code>url=http://localhost:3333</code></li></ul>`,34)]))}const m=s(t,[["render",n]]);export{u as __pageData,m as default};
