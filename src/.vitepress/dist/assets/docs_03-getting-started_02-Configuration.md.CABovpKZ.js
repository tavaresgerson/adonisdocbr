import{_ as i,c as a,a2 as e,o as n}from"./chunks/framework.YPpNXepj.js";const c=JSON.parse('{"title":"Configuração","description":"","frontmatter":{},"headers":[],"relativePath":"docs/03-getting-started/02-Configuration.md","filePath":"docs/03-getting-started/02-Configuration.md"}'),t={name:"docs/03-getting-started/02-Configuration.md"};function o(p,s,l,r,h,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="configuracao" tabindex="-1">Configuração <a class="header-anchor" href="#configuracao" aria-label="Permalink to &quot;Configuração&quot;">​</a></h1><h2 id="provedor-de-configuracao" tabindex="-1">Provedor de configuração <a class="header-anchor" href="#provedor-de-configuracao" aria-label="Permalink to &quot;Provedor de configuração&quot;">​</a></h2><p>O primeiro passo para ter uma base de código sustentável é encontrar um local dedicado para armazenar a configuração do aplicativo.</p><p>O AdonisJs usa o diretório <code>config</code>, onde todos os arquivos são carregados no momento da inicialização.</p><p>Você pode acessar os valores de configuração por meio do <strong>Provedor de configuração</strong>:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Config&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> appSecret</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;app.appSecret&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Os valores de configuração são obtidos usando <code>Config.get</code>, que aceita um argumento de string referenciando a chave que você deseja no formato <code>fileName.key</code>.</p><p>Você pode buscar valores de configuração aninhados usando a notação de ponto:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Exemplo de um arquivo de configuração, por exemplo, database.js</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Você pode recuperá-lo assim...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;database.mysql.host&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Se não tiver certeza de que uma chave está definida em sua configuração, você pode fornecer um segundo argumento que será retornado como o valor padrão:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;database.mysql.host&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Se quiser alterar os valores de configuração na memória, use <code>Config.set</code>:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;database.mysql.host&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;db.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">NOTA</p><p><code>Config.set</code> alterará apenas o valor <strong>na memória</strong>. Ele não gravará o novo valor em seu arquivo de configuração.</p></div><h2 id="provedor-de-ambiente" tabindex="-1">Provedor de ambiente <a class="header-anchor" href="#provedor-de-ambiente" aria-label="Permalink to &quot;Provedor de ambiente&quot;">​</a></h2><p>Ao criar um aplicativo, você pode querer uma configuração diferente com base no ambiente em que seu código está sendo executado.</p><p>Para atender a esse requisito, o AdonisJs usa a biblioteca <a href="https://github.com/motdotla/dotenv" target="_blank" rel="noreferrer">dotenv</a>.</p><p>Dentro da raiz de cada novo projeto AdonisJs, você encontrará um arquivo <code>.env.example</code>. Se você usou o AdonisJs CLI para instalar seu aplicativo, este arquivo será automaticamente duplicado como <code>.env</code>. Caso contrário, você deve copiá-lo manualmente.</p><div class="danger custom-block"><p class="custom-block-title">AVISO</p><p>O arquivo <code>.env</code> nunca deve ser confirmado no seu controle de origem ou compartilhado com outras pessoas.</p></div><p>O arquivo <code>.env</code> tem uma sintaxe simples <code>key=value</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .env</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">APP_SECRET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">F7op5n9vx1nAkno0DsNgZm5vjNXpOLIq</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DB_HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DB_USER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">root</span></span></code></pre></div><p>Você pode acessar valores env usando o <strong>Env Provider</strong>:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Env&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> appSecret</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Env.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;APP_SECRET&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Assim como o <strong>Config Provider</strong>, você pode fornecer um valor padrão como o segundo argumento:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Env.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DB_USER&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;root&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><code>Env.get</code> sempre retorna uma <code>string</code>. Se você quiser que um valor <code>Env</code> atue como booleano, precisará verificá-lo por meio de uma declaração de igualdade condicional, como esta:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> myBoolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Env.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MY_BOOLEAN&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;true&#39;</span></span></code></pre></div><h3 id="gerando-erros-se-uma-variavel-de-ambiente-necessaria-nao-existir" tabindex="-1">Gerando erros se uma variável de ambiente necessária não existir <a class="header-anchor" href="#gerando-erros-se-uma-variavel-de-ambiente-necessaria-nao-existir" aria-label="Permalink to &quot;Gerando erros se uma variável de ambiente necessária não existir&quot;">​</a></h3><p>Quando você tem uma variável de ambiente necessária para executar seu aplicativo, pode usar <code>Env.getOrFail()</code> para gerar um erro se a variável necessária não estiver definida.</p><div class="tip custom-block"><p class="custom-block-title">DICA</p><p>Se você quiser que seu aplicativo falhe rapidamente no momento da inicialização quando uma variável de ambiente estiver ausente, <strong>limite o acesso a variáveis ​​de ambiente somente de dentro de seus arquivos de configuração</strong> e não use o Provedor Env em nenhum outro lugar do aplicativo.</p></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Env&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Lançará &quot;Make sure to define APP_SECRET inside .env file.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Env.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOrFail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;APP_SECRET&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="localizacao-do-arquivo-env" tabindex="-1">Localização do arquivo .env <a class="header-anchor" href="#localizacao-do-arquivo-env" aria-label="Permalink to &quot;Localização do arquivo .env&quot;">​</a></h3><p>Você pode querer carregar um arquivo <code>.env</code> diferente.</p><p>Isso pode ser feito usando a variável de ambiente <code>ENV_PATH</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ENV_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/user/.env</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> adonis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span></span></code></pre></div><h3 id="desabilitando-o-arquivo-env" tabindex="-1">Desabilitando o arquivo .env <a class="header-anchor" href="#desabilitando-o-arquivo-env" aria-label="Permalink to &quot;Desabilitando o arquivo .env&quot;">​</a></h3><p>Você pode querer usar diretamente as variáveis ​​de ambiente no seu servidor em vez de retransmitir para um arquivo.</p><p>Isso pode ser feito usando a variável de ambiente <code>ENV_SILENT</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ENV_SILENT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> adonis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span></span></code></pre></div><h3 id="ambiente-de-teste" tabindex="-1">Ambiente de teste <a class="header-anchor" href="#ambiente-de-teste" aria-label="Permalink to &quot;Ambiente de teste&quot;">​</a></h3><p>Se você estiver iniciando seu aplicativo com <code>NODE_ENV</code> definido como <code>testing</code>, o AdonisJs carregará seu arquivo <code>.env.testing</code> e mesclará seus valores sobre seu arquivo <code>.env</code>.</p><p>Isso é útil para definir credenciais diferentes ao testar sua base de código.</p>`,42)]))}const g=i(t,[["render",o]]);export{c as __pageData,g as default};
