import{_ as e,c as s,a2 as i,o}from"./chunks/framework.BLTIpkzl.js";const u=JSON.parse('{"title":"Instalação","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guides/installation.md","filePath":"docs/guides/installation.md"}'),r={name:"docs/guides/installation.md"};function n(t,a,d,p,l,c){return o(),s("div",null,a[0]||(a[0]=[i(`<h1 id="instalacao" tabindex="-1">Instalação <a class="header-anchor" href="#instalacao" aria-label="Permalink to &quot;Instalação&quot;">​</a></h1><p>AdonisJS é um framework Node.js e, portanto, requer que o Node.js esteja instalado no seu computador. Para ser preciso, precisamos pelo menos da versão mais recente do <code>Node.js v14</code>.</p><p>Você pode verificar as versões do Node.js e do npm executando os seguintes comandos.</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># verificar versão node.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Se você não tiver o Node.js instalado, você pode <a href="https://nodejs.org/en/download" target="_blank" rel="noreferrer">baixar o binário</a> para seu sistema operacional no site oficial.</p><p>Se você se sentir confortável com a linha de comando, recomendamos usar <a href="https://volta.sh" target="_blank" rel="noreferrer">Volta</a> ou <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noreferrer">Node Version Manager</a> para instalar e executar várias versões do Node.js em seu computador.</p><h2 id="criando-um-novo-projeto" tabindex="-1">Criando um novo projeto <a class="header-anchor" href="#criando-um-novo-projeto" aria-label="Permalink to &quot;Criando um novo projeto&quot;">​</a></h2><p>Você pode criar um novo projeto usando <a href="https://docs.npmjs.com/cli/v7/commands/npm-init" target="_blank" rel="noreferrer">npm init</a>, <a href="https://classic.yarnpkg.com/en/docs/cli/create" target="_blank" rel="noreferrer">yarn create</a> ou <a href="https://pnpm.io/tr/next/cli/create" target="_blank" rel="noreferrer">pnpm create</a>. Essas ferramentas baixarão o pacote inicial do AdonisJS e iniciarão o processo de instalação.</p><p>:::codegroup</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> adonis-ts-app@latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello-world</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> adonis-ts-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello-world</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> adonis-ts-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello-world</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>:::</p><p>O processo de instalação solicita as seguintes seleções.</p><h4 id="estrutura-do-projeto" tabindex="-1">Estrutura do projeto <a class="header-anchor" href="#estrutura-do-projeto" aria-label="Permalink to &quot;Estrutura do projeto&quot;">​</a></h4><p>Você pode escolher entre uma das seguintes estruturas de projeto.</p><ul><li>A estrutura do projeto <code>web</code> é ideal para criar aplicativos renderizados pelo servidor clássico. Configuramos o suporte para sessões e também instalamos o mecanismo de modelo AdonisJS.</li><li>A estrutura do projeto <code>api</code> é ideal para criar um servidor de API.</li><li>A estrutura do projeto <code>slim</code> cria o menor aplicativo AdonisJS possível e não instala nenhum pacote adicional, exceto o núcleo do framework.</li></ul><h4 id="nome-do-projeto" tabindex="-1">Nome do projeto <a class="header-anchor" href="#nome-do-projeto" aria-label="Permalink to &quot;Nome do projeto&quot;">​</a></h4><p>O nome do projeto. Definimos o valor deste prompt dentro do arquivo <code>package.json</code>.</p><h4 id="configurar-eslint-prettier" tabindex="-1">Configurar eslint/prettier <a class="header-anchor" href="#configurar-eslint-prettier" aria-label="Permalink to &quot;Configurar eslint/prettier&quot;">​</a></h4><p>Opcionalmente, você pode configurar eslint e prettier. Ambos os pacotes são configurados com as configurações opinativas usadas pela equipe principal do AdonisJS.</p><h4 id="configurar-webpack-encore" tabindex="-1">Configurar Webpack Encore <a class="header-anchor" href="#configurar-webpack-encore" aria-label="Permalink to &quot;Configurar Webpack Encore&quot;">​</a></h4><p>Opcionalmente, você também pode configurar <a href="./http/assets-manager.html">Webpack Encore</a> para agrupar e servir dependências de frontend.</p><p>Observe que o AdonisJS é um framework de backend e não se preocupa com ferramentas de construção de frontend. Portanto, a configuração do Webpack é opcional.</p><h2 id="iniciando-o-servidor-de-desenvolvimento" tabindex="-1">Iniciando o servidor de desenvolvimento <a class="header-anchor" href="#iniciando-o-servidor-de-desenvolvimento" aria-label="Permalink to &quot;Iniciando o servidor de desenvolvimento&quot;">​</a></h2><p>Após criar o aplicativo, você pode iniciar o servidor de desenvolvimento executando o seguinte comando.</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>O comando <code>serve</code> inicia o servidor HTTP e executa uma compilação na memória do TypeScript para JavaScript.</li><li>O sinalizador <code>--watch</code> serve para observar o sistema de arquivos em busca de alterações e reiniciar o servidor automaticamente.</li></ul><p>Por padrão, o servidor inicia na porta 3333 (definida dentro do arquivo .env). Você pode visualizar a página de boas-vindas visitando: <a href="http://localhost:3333" target="_blank" rel="noreferrer">http://localhost:3333</a>.</p><h2 id="compilando-para-producao" tabindex="-1">Compilando para produção <a class="header-anchor" href="#compilando-para-producao" aria-label="Permalink to &quot;Compilando para produção&quot;">​</a></h2><p>Você deve sempre implantar o JavaScript compilado no seu servidor de produção. Você pode criar a compilação de produção executando o seguinte comando:</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --production</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>A saída compilada é gravada na pasta <code>build</code>. Você pode <code>cd</code> para essa pasta e iniciar o servidor executando diretamente o arquivo <code>server.js</code>. Saiba mais sobre o <a href="./fundamentals/typescript-build-process.html">processo de build do TypeScript</a></p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,34)]))}const m=e(r,[["render",n]]);export{u as __pageData,m as default};
