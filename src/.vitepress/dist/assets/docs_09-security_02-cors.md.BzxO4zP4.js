import{_ as s,c as a,o as i,a4 as e}from"./chunks/framework.nQaBHiNx.js";const m=JSON.parse('{"title":"CORS","description":"","frontmatter":{},"headers":[],"relativePath":"docs/09-security/02-cors.md","filePath":"docs/09-security/02-cors.md"}'),o={name:"docs/09-security/02-cors.md"},n=e(`<h1 id="cors" tabindex="-1">CORS <a class="header-anchor" href="#cors" aria-label="Permalink to &quot;CORS&quot;">​</a></h1><p>Cross-Origin Resource Sharing (CORS) é uma maneira de permitir solicitações HTTP de diferentes domínios. É muito comum em aplicativos AJAX, onde o navegador bloqueará todas as solicitações entre domínios, a menos que o servidor as autorize. Leia mais sobre CORS <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS" target="_blank" rel="noreferrer">aqui</a>.</p><h2 id="como-funciona" tabindex="-1">Como funciona? <a class="header-anchor" href="#como-funciona" aria-label="Permalink to &quot;Como funciona?&quot;">​</a></h2><p>As requisições AJAX de diferentes domínios precisam ser autorizadas antes que realizem as ações desejadas. Os navegadores fazem primeiro uma solicitação <em>preflight</em> com o método HTTP <em>OPTIONS</em> ao servidor para conceder permissão. O servidor pode permitir a solicitação retornando um código 200 OK e especificando os domínios permitidos via cabeçalho <em>Access-Control-Allow-Origin</em>.</p><p>O AdonisJS envia com um middleware CORS para lidar com esse fluxo para você através de um arquivo de configuração.</p><h2 id="configuracao" tabindex="-1">Configuração <a class="header-anchor" href="#configuracao" aria-label="Permalink to &quot;Configuração&quot;">​</a></h2><p>Para que as regras do CORS funcionem corretamente, certifique-se de que o <code>Adonis/Middleware/Cors</code> esteja registrado como um middleware global dentro do arquivo <code>app/Http/kernel.js</code>.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// app/Http/kernel.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> globalMiddleware</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;Adonis/Middleware/Cors&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="configuracao-1" tabindex="-1">Configuração <a class="header-anchor" href="#configuracao-1" aria-label="Permalink to &quot;Configuração&quot;">​</a></h2><p>Você pode gerenciar as regras CORS editando o arquivo de configuração <code>config/cors.js</code>.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config/cors.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  origin: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  methods: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;GET, PUT, POST&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  headers: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  exposeHeaders: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  credentials: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  maxAge: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="portugues-origem" tabindex="-1">português: origem <a class="header-anchor" href="#portugues-origem" aria-label="Permalink to &quot;português: origem&quot;">​</a></h4><p>Origin aceita múltiplos valores.</p><ol><li>Para bloquear todos os pedidos CORS, defina-o como falso</li><li>Para permitir solicitações de mesmo origem, defina-o como verdadeiro. Você pode definir origens separadas por vírgulas ( , ).</li><li>Definir o valor para um curinga *, permitirá todas as origens.</li><li>Finalmente, você pode anexar uma função de retorno e retornar um dos valores acima</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">requestOrigin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requestOrigin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;foo&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="metodos" tabindex="-1">métodos <a class="header-anchor" href="#metodos" aria-label="Permalink to &quot;métodos&quot;">​</a></h4><p>Métodos HTTP/verbos para permitir. Certifique-se de que é um valor separado por vírgulas de um dos múltiplos métodos.</p><h4 id="headers" tabindex="-1">headers <a class="header-anchor" href="#headers" aria-label="Permalink to &quot;headers&quot;">​</a></h4><p>Como origem, <em>headers</em> também aceitam múltiplos valores</p><ol><li>Para desativar todos os cabeçalhos definidos como falso.</li><li>Para permitir todos os cabeçalhos definidos dentro de Access-Control-Request-Headers defina-o como verdadeiro.</li><li>Permita uma string de cabeçalhos personalizados separados por vírgula (,). Por exemplo, Content-Type, Aceita.</li><li>Finalmente, uma função de retorno de chamada.</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">headers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">requestedHeaders</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="exposeheaders-opcional" tabindex="-1">exposeHeaders(opcional) <a class="header-anchor" href="#exposeheaders-opcional" aria-label="Permalink to &quot;exposeHeaders(opcional)&quot;">​</a></h4><p>Cabeçalhos separados por vírgulas para expor via cabeçalho <em>Access-Control-Expose-Headers</em>.</p><h4 id="credenciais-opcional" tabindex="-1">credenciais (opcional) <a class="header-anchor" href="#credenciais-opcional" aria-label="Permalink to &quot;credenciais (opcional)&quot;">​</a></h4><p>Permita ou não credenciais trocadas por definir o cabeçalho <em>Access-Control-Allow-Credentials</em> para um valor booleano.</p><h4 id="maxage-opcional" tabindex="-1">maxAge(opcional) <a class="header-anchor" href="#maxage-opcional" aria-label="Permalink to &quot;maxAge(opcional)&quot;">​</a></h4><p>Sets <em>Access-Control-Allow-Max-Age</em> header ao valor definido.</p>`,27),r=[n];function l(t,p,d,h,c,k){return i(),a("div",null,r)}const u=s(o,[["render",l]]);export{m as __pageData,u as default};
