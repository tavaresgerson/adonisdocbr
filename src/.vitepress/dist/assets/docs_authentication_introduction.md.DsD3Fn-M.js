import{_ as a,c as i,a2 as e,o as n}from"./chunks/framework.Dz7_3PEu.js";const c=JSON.parse('{"title":"Autenticação","description":"","frontmatter":{"summary":"Aprenda sobre o sistema de autenticação no AdonisJS e como autenticar usuários em seu aplicativo."},"headers":[],"relativePath":"docs/authentication/introduction.md","filePath":"docs/authentication/introduction.md"}'),t={name:"docs/authentication/introduction.md"};function o(l,s,r,p,d,h){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="autenticacao" tabindex="-1">Autenticação <a class="header-anchor" href="#autenticacao" aria-label="Permalink to &quot;Autenticação&quot;">​</a></h1><p>O AdonisJS vem com um sistema de autenticação robusto e seguro que você pode usar para fazer login e autenticar usuários do seu aplicativo. Seja um aplicativo renderizado pelo servidor, um cliente SPA ou um aplicativo móvel, você pode configurar a autenticação para todos eles.</p><p>O pacote de autenticação é construído em torno de <strong>guardas</strong> e <strong>provedores</strong>.</p><ul><li><p>As guardas são implementações de ponta a ponta de um tipo de login específico. Por exemplo, a guarda <code>session</code> permite que você autentique usuários usando cookies e sessão. Enquanto isso, a guarda <code>access_tokens</code> permitirá que você autentique clientes usando tokens.</p></li><li><p>Os provedores são usados ​​para procurar usuários e tokens em um banco de dados. Você pode usar os provedores integrados ou implementar os seus próprios.</p></li></ul><div class="info custom-block"><p class="custom-block-title">NOTA</p><p>Para garantir a segurança dos seus aplicativos, fazemos hash adequadamente nas senhas e tokens dos usuários. Além disso, os primitivos de segurança do AdonisJS são protegidos contra <a href="https://en.wikipedia.org/wiki/Timing_attack" target="_blank" rel="noreferrer">ataques de temporização</a> e <a href="https://owasp.org/www-community/attacks/Session_fixation" target="_blank" rel="noreferrer">ataques de fixação de sessão</a>.</p></div><h2 id="recursos-nao-suportados-pelo-pacote-auth" tabindex="-1">Recursos não suportados pelo pacote Auth <a class="header-anchor" href="#recursos-nao-suportados-pelo-pacote-auth" aria-label="Permalink to &quot;Recursos não suportados pelo pacote Auth&quot;">​</a></h2><p>O pacote auth foca estritamente na autenticação de solicitações HTTP, e os seguintes recursos estão fora de seu escopo.</p><ul><li>Recursos de registro de usuário como <strong>formulários de registro</strong>, <strong>verificação de e-mail</strong> e <strong>ativação de conta</strong>.</li><li>Recursos de gerenciamento de conta como <strong>recuperação de senha</strong> ou <strong>atualização de e-mail</strong>.</li><li><a href="./../security/authorization.html">Use bouncer</a> para implementar verificações de autorização em seu aplicativo.</li></ul><h2 id="escolhendo-um-auth-guard" tabindex="-1">Escolhendo um auth guard <a class="header-anchor" href="#escolhendo-um-auth-guard" aria-label="Permalink to &quot;Escolhendo um auth guard&quot;">​</a></h2><p>Os seguintes auth guards integrados fornecem a você o fluxo de trabalho mais direto para autenticar usuários sem comprometer a segurança de seus aplicativos. Além disso, você pode <a href="./custom_auth_guard.html">criar seus guardas de autenticação</a> para requisitos personalizados.</p><h3 id="sessao" tabindex="-1">Sessão <a class="header-anchor" href="#sessao" aria-label="Permalink to &quot;Sessão&quot;">​</a></h3><p>O guarda de sessão usa o pacote <a href="./../basics/session.html">@adonisjs/session</a> para rastrear o estado do usuário conectado dentro do armazenamento de sessão.</p><p>Sessões e cookies estão na internet há muito tempo e funcionam muito bem para a maioria dos aplicativos. Recomendamos usar o guarda de sessão:</p><ul><li>Se você estiver criando um aplicativo da web renderizado pelo servidor.</li><li>Ou uma API AdonisJS com seu cliente no mesmo domínio de nível superior. Por exemplo, <code>api.example.com</code> e <code>example.com</code>.</li></ul><h3 id="tokens-de-acesso" tabindex="-1">Tokens de acesso <a class="header-anchor" href="#tokens-de-acesso" aria-label="Permalink to &quot;Tokens de acesso&quot;">​</a></h3><p>Os tokens de acesso são tokens aleatórios criptograficamente seguros (também conhecidos como tokens de acesso opacos) emitidos para usuários após login bem-sucedido. Você pode usar tokens de acesso para aplicativos onde seu servidor AdonisJS não pode gravar/ler cookies. Por exemplo:</p><ul><li>Um aplicativo móvel nativo.</li><li>Um aplicativo da web hospedado em um domínio diferente do seu servidor de API AdonisJS.</li></ul><p>Ao usar tokens de acesso, torna-se responsabilidade do seu aplicativo do lado do cliente armazená-los com segurança. Os tokens de acesso fornecem acesso irrestrito ao seu aplicativo (em nome de um usuário), e vazá-los pode levar a problemas de segurança.</p><h3 id="autenticacao-basica" tabindex="-1">Autenticação básica <a class="header-anchor" href="#autenticacao-basica" aria-label="Permalink to &quot;Autenticação básica&quot;">​</a></h3><p>A proteção de autenticação básica é uma implementação da <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication" target="_blank" rel="noreferrer">estrutura de autenticação HTTP</a>, na qual o cliente deve passar as credenciais do usuário como uma string codificada em base64 por meio do cabeçalho <code>Authorization</code>.</p><p>Existem maneiras melhores de implementar um sistema de login seguro do que a autenticação básica. No entanto, você pode usá-lo temporariamente enquanto seu aplicativo estiver em desenvolvimento ativo.</p><h2 id="escolhendo-um-provedor-de-usuario" tabindex="-1">Escolhendo um provedor de usuário <a class="header-anchor" href="#escolhendo-um-provedor-de-usuario" aria-label="Permalink to &quot;Escolhendo um provedor de usuário&quot;">​</a></h2><p>Conforme abordado anteriormente neste guia, um provedor de usuário é responsável por encontrar usuários durante o processo de autenticação.</p><p>Os provedores de usuário são específicos de proteção; por exemplo, o provedor de usuário para o guarda de sessão é responsável por encontrar usuários por sua ID, e o provedor de usuário para o guarda de tokens de acesso também é responsável por verificar tokens de acesso.</p><p>Nós enviamos com um provedor de usuário Lucid para os guardas integrados, que usa modelos Lucid para encontrar usuários, gerar tokens e verificar tokens.</p><h2 id="instalacao" tabindex="-1">Instalação <a class="header-anchor" href="#instalacao" aria-label="Permalink to &quot;Instalação&quot;">​</a></h2><p>O sistema auth vem pré-configurado com os kits iniciais <code>web</code> e <code>api</code>. No entanto, você pode instalá-lo e configurá-lo manualmente dentro de um aplicativo da seguinte forma.</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Configurar com guarda de sessão (padrão)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @adonisjs/auth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --guard=session</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Configurar com guarda de tokens de acesso</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @adonisjs/auth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --guard=access_tokens</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Configurar com guarda de autenticação básica</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @adonisjs/auth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --guard=basic_auth</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="veja-as-etapas-executadas-pelo-comando-add" tabindex="-1">Veja as etapas executadas pelo comando add <a class="header-anchor" href="#veja-as-etapas-executadas-pelo-comando-add" aria-label="Permalink to &quot;Veja as etapas executadas pelo comando add&quot;">​</a></h3><ol><li><p>Instale o pacote <code>@adonisjs/auth</code> usando o gerenciador de pacotes detectado.</p></li><li><p>Registra o seguinte provedor de serviços dentro do arquivo <code>adonisrc.ts</code>.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  providers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...outros provedores</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@adonisjs/auth/auth_provider&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>Cria e registra o seguinte middleware dentro do arquivo <code>start/kernel.ts</code>.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@adonisjs/auth/initialize_auth_middleware&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">named</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#middleware/auth_middleware&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // somente se estiver usando o guarda de sessão</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  guest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#middleware/guest_middleware&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>Cria o modelo de usuário dentro do diretório <code>app/models</code>.</p></li><li><p>Cria migração de banco de dados para a tabela <code>users</code>.</p></li><li><p>Cria migrações de banco de dados para o guard selecionado.</p></li></ol><h2 id="o-middleware-initialize-auth" tabindex="-1">O middleware Initialize auth <a class="header-anchor" href="#o-middleware-initialize-auth" aria-label="Permalink to &quot;O middleware Initialize auth&quot;">​</a></h2><p>Durante a configuração, registramos o <code>@adonisjs/auth/initialize_auth_middleware</code> dentro do seu aplicativo. O middleware é responsável por criar uma instância da classe <a href="https://github.com/adonisjs/auth/blob/main/src/authenticator.ts" target="_blank" rel="noreferrer">Authenticator</a> e a compartilha por meio da propriedade <code>ctx.auth</code> com o restante da solicitação.</p><p>Observe que o middleware initialize auth não autentica a solicitação nem protege as rotas. Ele é usado apenas para inicializar o autenticador e compartilhá-lo com o restante da solicitação. Você deve usar o middleware <a href="./session_guard.html#protecting-routes">auth</a> para proteger rotas.</p><p>Além disso, a mesma instância do autenticador é compartilhada com modelos do Edge (se seu aplicativo estiver usando o Edge), e você pode acessá-la usando a propriedade <code>auth</code>. Por exemplo:</p><div class="language-edge vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">edge</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(auth.isAuthenticated)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Hello {{ auth.user.email }} &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@end</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="criando-a-tabela-de-usuarios" tabindex="-1">Criando a tabela de usuários <a class="header-anchor" href="#criando-a-tabela-de-usuarios" aria-label="Permalink to &quot;Criando a tabela de usuários&quot;">​</a></h2><p>O comando <code>configure</code> cria uma migração de banco de dados para a tabela <code>users</code> dentro do diretório <code>database/migrations</code>. Sinta-se à vontade para abrir este arquivo e fazer alterações de acordo com os requisitos do seu aplicativo.</p><p>Por padrão, as seguintes colunas são criadas.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { BaseSchema } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@adonisjs/lucid/schema&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BaseSchema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  protected</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> tableName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;users&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> up</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.schema.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.tableName, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">increments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notNullable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;full_name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nullable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;email&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">254</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notNullable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unique</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;password&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notNullable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;created_at&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notNullable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;updated_at&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nullable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> down</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.schema.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dropTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.tableName)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>Além disso, atualize o modelo <code>User</code> se você definir, renomear ou remover colunas da tabela <code>users</code>.</p><h2 id="proximas-etapas" tabindex="-1">Próximas etapas <a class="header-anchor" href="#proximas-etapas" aria-label="Permalink to &quot;Próximas etapas&quot;">​</a></h2><ul><li><a href="./verifying_user_credentials.html">Verificar credenciais do usuário</a> sem comprometer a segurança do seu aplicativo.</li><li><a href="./session_guard.html">Session guard</a> para autenticação com estado.</li><li><a href="./access_tokens_guard.html">Access tokens guard</a> para autenticação baseada em tokens.</li></ul>`,42)]))}const u=a(t,[["render",o]]);export{c as __pageData,u as default};
